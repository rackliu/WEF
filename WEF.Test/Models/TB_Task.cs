//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由WEF数据库工具, Version=3.2.3.5, Culture=neutral, PublicKeyToken=null生成;时间 2019-04-11 19:56:09.012
//     运行时版本:4.0.30319.42000
//     不建议手动更改此代码，如有需要请自行扩展partial类
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Runtime.Serialization;
using WEF;
using WEF.Common;
using WEF.Section;
using System.Collections.Generic;

namespace WEF.Models
{

    /// <summary>
    /// 实体类TB_TASK
    /// </summary>
    [Serializable, DataContract]
    public partial class TB_TASK : Entity
    {
        private static string m_tableName;
        public TB_TASK() : base("TB_TASK") { m_tableName = "TB_TASK"; }
        public TB_TASK(string tableName) : base(tableName) { m_tableName = tableName; }

        #region Model
        private string _TASKID;
        private string _NAME;
        private string _DESCRIPTION;
        private string _PLATFORMID;
        private string _BUSINID;
        private int _POINT;
        private int _DAYTIMES;
        private int _TOTALTIMES;
        private int _DAYLIMIT;
        private int _TOTALLIMIT;
        private DateTime _BEGINTIME;
        private DateTime _ENDTIME;
        private string _OPERATOR;
        private int _CRC32;
        private DateTime _CREATETIME;
        private DateTime _UPDATETIME;
        private bool _ISENABLED;
        private bool _ISDEL;
        private int? _TASKSTATE;
        private string _COMPANYID;
        private int? _TASKTYPE;
        private string _TASKSTRATEGYID;
        private int? _TASKSUBTYPE;
        private string _FLOWTYPE;
        private decimal? _TASKMINPOINT;
        private decimal? _TASKMAXPOINT;
        private int? _TASKREWARDTYPE;
        /// <summary>
        /// TASKID 
        /// </summary>
        [DataMember]
        public string TASKID
        {
            get { return _TASKID; }
            set
            {
                this.OnPropertyValueChange(_.TASKID, _TASKID, value);
                this._TASKID = value;
            }
        }
        /// <summary>
        /// NAME 
        /// </summary>
        [DataMember]
        public string NAME
        {
            get { return _NAME; }
            set
            {
                this.OnPropertyValueChange(_.NAME, _NAME, value);
                this._NAME = value;
            }
        }
        /// <summary>
        /// DESCRIPTION 
        /// </summary>
        [DataMember]
        public string DESCRIPTION
        {
            get { return _DESCRIPTION; }
            set
            {
                this.OnPropertyValueChange(_.DESCRIPTION, _DESCRIPTION, value);
                this._DESCRIPTION = value;
            }
        }
        /// <summary>
        /// PLATFORMID 
        /// </summary>
        [DataMember]
        public string PLATFORMID
        {
            get { return _PLATFORMID; }
            set
            {
                this.OnPropertyValueChange(_.PLATFORMID, _PLATFORMID, value);
                this._PLATFORMID = value;
            }
        }
        /// <summary>
        /// BUSINID 
        /// </summary>
        [DataMember]
        public string BUSINID
        {
            get { return _BUSINID; }
            set
            {
                this.OnPropertyValueChange(_.BUSINID, _BUSINID, value);
                this._BUSINID = value;
            }
        }
        /// <summary>
        /// POINT 
        /// </summary>
        [DataMember]
        public int POINT
        {
            get { return _POINT; }
            set
            {
                this.OnPropertyValueChange(_.POINT, _POINT, value);
                this._POINT = value;
            }
        }
        /// <summary>
        /// DAYTIMES 
        /// </summary>
        [DataMember]
        public int DAYTIMES
        {
            get { return _DAYTIMES; }
            set
            {
                this.OnPropertyValueChange(_.DAYTIMES, _DAYTIMES, value);
                this._DAYTIMES = value;
            }
        }
        /// <summary>
        /// TOTALTIMES 
        /// </summary>
        [DataMember]
        public int TOTALTIMES
        {
            get { return _TOTALTIMES; }
            set
            {
                this.OnPropertyValueChange(_.TOTALTIMES, _TOTALTIMES, value);
                this._TOTALTIMES = value;
            }
        }
        /// <summary>
        /// DAYLIMIT 
        /// </summary>
        [DataMember]
        public int DAYLIMIT
        {
            get { return _DAYLIMIT; }
            set
            {
                this.OnPropertyValueChange(_.DAYLIMIT, _DAYLIMIT, value);
                this._DAYLIMIT = value;
            }
        }
        /// <summary>
        /// TOTALLIMIT 
        /// </summary>
        [DataMember]
        public int TOTALLIMIT
        {
            get { return _TOTALLIMIT; }
            set
            {
                this.OnPropertyValueChange(_.TOTALLIMIT, _TOTALLIMIT, value);
                this._TOTALLIMIT = value;
            }
        }
        /// <summary>
        /// BEGINTIME 
        /// </summary>
        [DataMember]
        public DateTime BEGINTIME
        {
            get { return _BEGINTIME; }
            set
            {
                this.OnPropertyValueChange(_.BEGINTIME, _BEGINTIME, value);
                this._BEGINTIME = value;
            }
        }
        /// <summary>
        /// ENDTIME 
        /// </summary>
        [DataMember]
        public DateTime ENDTIME
        {
            get { return _ENDTIME; }
            set
            {
                this.OnPropertyValueChange(_.ENDTIME, _ENDTIME, value);
                this._ENDTIME = value;
            }
        }
        /// <summary>
        /// OPERATOR 
        /// </summary>
        [DataMember]
        public string OPERATOR
        {
            get { return _OPERATOR; }
            set
            {
                this.OnPropertyValueChange(_.OPERATOR, _OPERATOR, value);
                this._OPERATOR = value;
            }
        }
        /// <summary>
        /// CRC32 
        /// </summary>
        [DataMember]
        public int CRC32
        {
            get { return _CRC32; }
            set
            {
                this.OnPropertyValueChange(_.CRC32, _CRC32, value);
                this._CRC32 = value;
            }
        }
        /// <summary>
        /// CREATETIME 
        /// </summary>
        [DataMember]
        public DateTime CREATETIME
        {
            get { return _CREATETIME; }
            set
            {
                this.OnPropertyValueChange(_.CREATETIME, _CREATETIME, value);
                this._CREATETIME = value;
            }
        }
        /// <summary>
        /// UPDATETIME 
        /// </summary>
        [DataMember]
        public DateTime UPDATETIME
        {
            get { return _UPDATETIME; }
            set
            {
                this.OnPropertyValueChange(_.UPDATETIME, _UPDATETIME, value);
                this._UPDATETIME = value;
            }
        }
        /// <summary>
        /// ISENABLED 
        /// </summary>
        [DataMember]
        public bool ISENABLED
        {
            get { return _ISENABLED; }
            set
            {
                this.OnPropertyValueChange(_.ISENABLED, _ISENABLED, value);
                this._ISENABLED = value;
            }
        }
        /// <summary>
        /// ISDEL 
        /// </summary>
        [DataMember]
        public bool ISDEL
        {
            get { return _ISDEL; }
            set
            {
                this.OnPropertyValueChange(_.ISDEL, _ISDEL, value);
                this._ISDEL = value;
            }
        }
        /// <summary>
        /// TASKSTATE 
        /// </summary>
        [DataMember]
        public int? TASKSTATE
        {
            get { return _TASKSTATE; }
            set
            {
                this.OnPropertyValueChange(_.TASKSTATE, _TASKSTATE, value);
                this._TASKSTATE = value;
            }
        }
        /// <summary>
        /// COMPANYID 
        /// </summary>
        [DataMember]
        public string COMPANYID
        {
            get { return _COMPANYID; }
            set
            {
                this.OnPropertyValueChange(_.COMPANYID, _COMPANYID, value);
                this._COMPANYID = value;
            }
        }
        /// <summary>
        /// TASKTYPE 
        /// </summary>
        [DataMember]
        public int? TASKTYPE
        {
            get { return _TASKTYPE; }
            set
            {
                this.OnPropertyValueChange(_.TASKTYPE, _TASKTYPE, value);
                this._TASKTYPE = value;
            }
        }
        /// <summary>
        /// TASKSTRATEGYID 
        /// </summary>
        [DataMember]
        public string TASKSTRATEGYID
        {
            get { return _TASKSTRATEGYID; }
            set
            {
                this.OnPropertyValueChange(_.TASKSTRATEGYID, _TASKSTRATEGYID, value);
                this._TASKSTRATEGYID = value;
            }
        }
        /// <summary>
        /// TASKSUBTYPE 
        /// </summary>
        [DataMember]
        public int? TASKSUBTYPE
        {
            get { return _TASKSUBTYPE; }
            set
            {
                this.OnPropertyValueChange(_.TASKSUBTYPE, _TASKSUBTYPE, value);
                this._TASKSUBTYPE = value;
            }
        }
        /// <summary>
        /// FLOWTYPE 
        /// </summary>
        [DataMember]
        public string FLOWTYPE
        {
            get { return _FLOWTYPE; }
            set
            {
                this.OnPropertyValueChange(_.FLOWTYPE, _FLOWTYPE, value);
                this._FLOWTYPE = value;
            }
        }
        /// <summary>
        /// TASKMINPOINT 
        /// </summary>
        [DataMember]
        public decimal? TASKMINPOINT
        {
            get { return _TASKMINPOINT; }
            set
            {
                this.OnPropertyValueChange(_.TASKMINPOINT, _TASKMINPOINT, value);
                this._TASKMINPOINT = value;
            }
        }
        /// <summary>
        /// TASKMAXPOINT 
        /// </summary>
        [DataMember]
        public decimal? TASKMAXPOINT
        {
            get { return _TASKMAXPOINT; }
            set
            {
                this.OnPropertyValueChange(_.TASKMAXPOINT, _TASKMAXPOINT, value);
                this._TASKMAXPOINT = value;
            }
        }
        /// <summary>
        /// TASKREWARDTYPE 
        /// </summary>
        [DataMember]
        public int? TASKREWARDTYPE
        {
            get { return _TASKREWARDTYPE; }
            set
            {
                this.OnPropertyValueChange(_.TASKREWARDTYPE, _TASKREWARDTYPE, value);
                this._TASKREWARDTYPE = value;
            }
        }
        #endregion

        #region Method
        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        public override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
                _.TASKID};
        }
        /// <summary>
        /// 获取列信息
        /// </summary>
        public override Field[] GetFields()
        {
            return new Field[] {
                _.TASKID,
                _.NAME,
                _.DESCRIPTION,
                _.PLATFORMID,
                _.BUSINID,
                _.POINT,
                _.DAYTIMES,
                _.TOTALTIMES,
                _.DAYLIMIT,
                _.TOTALLIMIT,
                _.BEGINTIME,
                _.ENDTIME,
                _.OPERATOR,
                _.CRC32,
                _.CREATETIME,
                _.UPDATETIME,
                _.ISENABLED,
                _.ISDEL,
                _.TASKSTATE,
                _.COMPANYID,
                _.TASKTYPE,
                _.TASKSTRATEGYID,
                _.TASKSUBTYPE,
                _.FLOWTYPE,
                _.TASKMINPOINT,
                _.TASKMAXPOINT,
                _.TASKREWARDTYPE};
        }
        /// <summary>
        /// 获取值信息
        /// </summary>
        public override object[] GetValues()
        {
            return new object[] {
                this._TASKID,
                this._NAME,
                this._DESCRIPTION,
                this._PLATFORMID,
                this._BUSINID,
                this._POINT,
                this._DAYTIMES,
                this._TOTALTIMES,
                this._DAYLIMIT,
                this._TOTALLIMIT,
                this._BEGINTIME,
                this._ENDTIME,
                this._OPERATOR,
                this._CRC32,
                this._CREATETIME,
                this._UPDATETIME,
                this._ISENABLED,
                this._ISDEL,
                this._TASKSTATE,
                this._COMPANYID,
                this._TASKTYPE,
                this._TASKSTRATEGYID,
                this._TASKSUBTYPE,
                this._FLOWTYPE,
                this._TASKMINPOINT,
                this._TASKMAXPOINT,
                this._TASKREWARDTYPE};
        }
        #endregion

        #region _Field
        /// <summary>
        /// 字段信息
        /// </summary>
        public class _
        {
            /// <summary>
            /// TB_TASK 
            /// </summary>
            public readonly static Field All = new Field("*", m_tableName);
            /// <summary>
            /// TASKID 
            /// </summary>
            public readonly static Field TASKID = new Field("TASKID", m_tableName, "TASKID");
            /// <summary>
            /// NAME 
            /// </summary>
            public readonly static Field NAME = new Field("NAME", m_tableName, "NAME");
            /// <summary>
            /// DESCRIPTION 
            /// </summary>
            public readonly static Field DESCRIPTION = new Field("DESCRIPTION", m_tableName, "DESCRIPTION");
            /// <summary>
            /// PLATFORMID 
            /// </summary>
            public readonly static Field PLATFORMID = new Field("PLATFORMID", m_tableName, "PLATFORMID");
            /// <summary>
            /// BUSINID 
            /// </summary>
            public readonly static Field BUSINID = new Field("BUSINID", m_tableName, "BUSINID");
            /// <summary>
            /// POINT 
            /// </summary>
            public readonly static Field POINT = new Field("POINT", m_tableName, "POINT");
            /// <summary>
            /// DAYTIMES 
            /// </summary>
            public readonly static Field DAYTIMES = new Field("DAYTIMES", m_tableName, "DAYTIMES");
            /// <summary>
            /// TOTALTIMES 
            /// </summary>
            public readonly static Field TOTALTIMES = new Field("TOTALTIMES", m_tableName, "TOTALTIMES");
            /// <summary>
            /// DAYLIMIT 
            /// </summary>
            public readonly static Field DAYLIMIT = new Field("DAYLIMIT", m_tableName, "DAYLIMIT");
            /// <summary>
            /// TOTALLIMIT 
            /// </summary>
            public readonly static Field TOTALLIMIT = new Field("TOTALLIMIT", m_tableName, "TOTALLIMIT");
            /// <summary>
            /// BEGINTIME 
            /// </summary>
            public readonly static Field BEGINTIME = new Field("BEGINTIME", m_tableName, "BEGINTIME");
            /// <summary>
            /// ENDTIME 
            /// </summary>
            public readonly static Field ENDTIME = new Field("ENDTIME", m_tableName, "ENDTIME");
            /// <summary>
            /// OPERATOR 
            /// </summary>
            public readonly static Field OPERATOR = new Field("OPERATOR", m_tableName, "OPERATOR");
            /// <summary>
            /// CRC32 
            /// </summary>
            public readonly static Field CRC32 = new Field("CRC32", m_tableName, "CRC32");
            /// <summary>
            /// CREATETIME 
            /// </summary>
            public readonly static Field CREATETIME = new Field("CREATETIME", m_tableName, "CREATETIME");
            /// <summary>
            /// UPDATETIME 
            /// </summary>
            public readonly static Field UPDATETIME = new Field("UPDATETIME", m_tableName, "UPDATETIME");
            /// <summary>
            /// ISENABLED 
            /// </summary>
            public readonly static Field ISENABLED = new Field("ISENABLED", m_tableName, "ISENABLED");
            /// <summary>
            /// ISDEL 
            /// </summary>
            public readonly static Field ISDEL = new Field("ISDEL", m_tableName, "ISDEL");
            /// <summary>
            /// TASKSTATE 
            /// </summary>
            public readonly static Field TASKSTATE = new Field("TASKSTATE", m_tableName, "TASKSTATE");
            /// <summary>
            /// COMPANYID 
            /// </summary>
            public readonly static Field COMPANYID = new Field("COMPANYID", m_tableName, "COMPANYID");
            /// <summary>
            /// TASKTYPE 
            /// </summary>
            public readonly static Field TASKTYPE = new Field("TASKTYPE", m_tableName, "TASKTYPE");
            /// <summary>
            /// TASKSTRATEGYID 
            /// </summary>
            public readonly static Field TASKSTRATEGYID = new Field("TASKSTRATEGYID", m_tableName, "TASKSTRATEGYID");
            /// <summary>
            /// TASKSUBTYPE 
            /// </summary>
            public readonly static Field TASKSUBTYPE = new Field("TASKSUBTYPE", m_tableName, "TASKSUBTYPE");
            /// <summary>
            /// FLOWTYPE 
            /// </summary>
            public readonly static Field FLOWTYPE = new Field("FLOWTYPE", m_tableName, "FLOWTYPE");
            /// <summary>
            /// TASKMINPOINT 
            /// </summary>
            public readonly static Field TASKMINPOINT = new Field("TASKMINPOINT", m_tableName, "TASKMINPOINT");
            /// <summary>
            /// TASKMAXPOINT 
            /// </summary>
            public readonly static Field TASKMAXPOINT = new Field("TASKMAXPOINT", m_tableName, "TASKMAXPOINT");
            /// <summary>
            /// TASKREWARDTYPE 
            /// </summary>
            public readonly static Field TASKREWARDTYPE = new Field("TASKREWARDTYPE", m_tableName, "TASKREWARDTYPE");
        }
        #endregion


    }
    /// <summary>
    /// 实体类TB_TASK操作类
    /// </summary>
    public partial class TB_TASKRepository
    {
        DBContext db;
        /// <summary>
        /// 当前实体查询上下文
        /// </summary>
        public ISearch<TB_TASK> Search(string tableName = "")
        {
            if (string.IsNullOrEmpty(tableName))
            {
                tableName = "TB_TASK";
            }
            return db.Search<TB_TASK>(tableName);
        }
        /// <summary>
        /// 当前实体查询上下文
        /// </summary>
        public ISearch<TB_TASK> Search(TB_TASK entity)
        {
            return db.Search<TB_TASK>(entity);
        }
        /// <summary>
        /// 构造方法
        /// </summary>
        public TB_TASKRepository()
        {
            db = new DBContext();
        }
        /// <summary>
        /// 构造方法
        /// <param name="connStrName">连接字符串中的名称</param>
        /// </summary>
        public TB_TASKRepository(string connStrName)
        {
            db = new DBContext(connStrName);
        }
        /// <summary>
        /// 当前db操作上下文
        /// </summary>
        public DBContext DBContext
        {
            get
            {
                return db;
            }
        }
        /// <summary>
        /// 获取实体
        /// <param name="pageIndex">分页第几页</param>
        /// <param name="pageSize">分页一页取值</param>
        /// </summary>
        public TB_TASK GetTB_TASK(string id)
        {
            return Search().Where(b => b.TASKID == id).First();
        }
        /// <summary>
        /// 获取列表
        /// <param name="pageIndex">分页第几页</param>
        /// <param name="pageSize">分页一页取值</param>
        /// </summary>
        public List<TB_TASK> GetList(int pageIndex, int pageSize)
        {
            return this.Search().Page(pageIndex, pageSize).ToList();
        }
        /// <summary>
        /// 获取列表
        /// <param name="tableName">表名</param>
        /// <param name="pageIndex">分页第几页</param>
        /// <param name="pageSize">分页一页取值</param>
        /// </summary>
        public List<TB_TASK> GetList(string tableName, int pageIndex = 1, int pageSize = 12)
        {
            return this.Search(tableName).Page(pageIndex, pageSize).ToList();
        }
        /// <summary>
        /// 添加实体
        /// <param name="obj">传进的实体</param>
        /// </summary>
        public int Insert(TB_TASK obj)
        {
            return db.Insert(obj);
        }
        /// <summary>
        /// 更新实体
        /// <param name="obj">传进的实体</param>
        /// </summary>
        public int Update(TB_TASK obj)
        {
            return db.Update(obj);
        }
        /// <summary>
        /// 删除实体
        /// <param name="obj">传进的实体</param>
        /// </summary>
        public int Delete(TB_TASK obj)
        {
            return db.Delete(obj);
        }
        /// <summary>
        /// 删除实体
        /// <param name="id">id</param>
        /// </summary>
        public int Delete(string id)
        {
            var obj = Search().Where(b => b.TASKID == id).First();
            return db.Delete(obj);
        }
        /// <summary>
        /// 批量删除实体
        /// <param name="obj">传进的实体列表</param>
        /// </summary>
        public int Deletes(List<TB_TASK> objs)
        {
            return db.Delete<TB_TASK>(objs);
        }
        /// <summary>
        /// 执行sql语句
        /// <param name="sql"></param>
        /// </summary>
        public SqlSection ExecuteSQL(string sql)
        {
            return db.FromSql(sql);
        }
        /// <summary>
        /// 执行存储过程
        /// <param name="sql"></param>
        /// </summary>
        public ProcSection ExcuteProc(string procName)
        {
            return db.FromProc(procName);
        }
    }

}

