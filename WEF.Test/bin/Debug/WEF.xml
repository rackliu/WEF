<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WEF</name>
    </assembly>
    <members>
        <member name="T:WEF.Cache.CacheConfiguration">
            <summary>
            缓存设置
            </summary>
        </member>
        <member name="F:WEF.Cache.CacheConfiguration.enableCache">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:WEF.Cache.CacheConfiguration.Enable">
            <summary>
            是否开启缓存
            </summary>
        </member>
        <member name="P:WEF.Cache.CacheConfiguration.Entities">
            <summary>
            设置表缓存
            </summary>
        </member>
        <member name="T:WEF.Cache.Cache">
            <summary>
            简单缓存处理类
            </summary>
        </member>
        <member name="F:WEF.Cache.Cache.Default">
            <summary>
            默认cache实例
            </summary>
        </member>
        <member name="F:WEF.Cache.Cache.hxjCache">
            <summary>
            cache
            </summary>
        </member>
        <member name="F:WEF.Cache.Cache._timeOut">
            <summary>
            timeout 600秒
            </summary>
        </member>
        <member name="M:WEF.Cache.Cache.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.Cache.Cache.#ctor(System.Int32)">
            <summary>
            设置过期时间
            </summary>
            <param name="timeOut"></param>
        </member>
        <member name="P:WEF.Cache.Cache.TimeOut">
            <summary>
            time out (seconds)   
            
            <![CDATA[if timeout <=0,the cache expiration time is maxvalue]]>
            
            </summary>
        </member>
        <member name="M:WEF.Cache.Cache.AddCache(System.String,System.Object)">
            <summary>
            添加缓存 (绝对有效期)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
        </member>
        <member name="M:WEF.Cache.Cache.AddCache(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存 (绝对有效期)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="timeout">绝对有效期（单位: 秒）</param>
        </member>
        <member name="M:WEF.Cache.Cache.AddCacheSlidingExpiration(System.String,System.Object)">
            <summary>
            添加缓存 (相对有效期)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
        </member>
        <member name="M:WEF.Cache.Cache.AddCacheSlidingExpiration(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存 (相对有效期)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="timeout">相对过期时间 (单位: 秒)</param>
        </member>
        <member name="M:WEF.Cache.Cache.AddCacheFilesDependency(System.String,System.Object,System.String[])">
            <summary>
            添加缓存 (文件依赖)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="filenames">缓存依赖的文件或目录</param>
        </member>
        <member name="M:WEF.Cache.Cache.AddCacheDependency(System.String,System.Object,System.Int32,System.Web.Caching.CacheDependency)">
            <summary>
            添加缓存 (文件依赖)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="timeout">绝对过期时间 （单位：秒）</param>
            <param name="dep">缓存依赖</param>
        </member>
        <member name="M:WEF.Cache.Cache.AddCacheKeysDependency(System.String,System.Object,System.String[])">
            <summary>
            添加缓存 (一组键值依赖)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="cachekeys">一组缓存键，此改变缓存也失效</param>
        </member>
        <member name="M:WEF.Cache.Cache.onRemove(System.String,System.Object,System.Web.Caching.CacheItemRemovedReason)">
            <summary>
            缓存删除的委托实例
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <param name="reason"></param>
        </member>
        <member name="M:WEF.Cache.Cache.RemoveCache(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="cacheKey">缓存键值</param>
        </member>
        <member name="M:WEF.Cache.Cache.GetCache(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="cacheKey">对象的关键字</param>
            <returns></returns>
        </member>
        <member name="M:WEF.Cache.Cache.GetCount">
            <summary>
            获取缓存数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Cache.Cache.GetCacheKeys">
            <summary>
            返回缓存键值列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Cache.Cache.ClearAll">
            <summary>
            清空所有缓存
            </summary>
        </member>
        <member name="F:WEF.Cache.CacheInfo.timeout">
            <summary>
            过期时间 单位：秒
            </summary>
        </member>
        <member name="P:WEF.Cache.CacheInfo.TimeOut">
            <summary>
            过期时间 单位：秒
            </summary>
        </member>
        <member name="F:WEF.Cache.CacheInfo.filePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:WEF.Cache.CacheInfo.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="M:WEF.Cache.CacheInfo.IsNullOrEmpty">
            <summary>
            判断该cache是否为空
            </summary>
            <returns></returns>
        </member>
        <member name="T:WEF.Common.BaseFieldType">
            <summary>
            表基本字段
            </summary>
        </member>
        <member name="T:WEF.Common.ColumnInfo">
            <summary>
            列描述信息
            </summary>
        </member>
        <member name="P:WEF.Common.ColumnInfo.Ordinal">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:WEF.Common.ColumnInfo.Name">
            <summary>
            列名
            </summary>
        </member>
        <member name="P:WEF.Common.ColumnInfo.AllowDBNull">
            <summary>
            是否可空
            </summary>
        </member>
        <member name="P:WEF.Common.ColumnInfo.MaxLength">
            <summary>
            最大长度
            </summary>
        </member>
        <member name="P:WEF.Common.ColumnInfo.DataTypeName">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:WEF.Common.ColumnInfo.AutoIncrement">
            <summary>
            是否自增长
            </summary>
        </member>
        <member name="P:WEF.Common.ColumnInfo.IsPrimaryKey">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="P:WEF.Common.ColumnInfo.Unique">
            <summary>
            是否唯一
            </summary>
        </member>
        <member name="P:WEF.Common.ColumnInfo.IsReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="M:WEF.Common.DataUtils.FormatSQL(System.String,System.Char,System.Char)">
            <summary>
            格式化sql
            </summary>
            <param name="sql"></param>
            <param name="leftToken"></param>
            <param name="rightToken"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.FormatValue(System.Object)">
            <summary>
            格式化数据为数据库通用格式
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.CheckStruct(System.Type)">
            <summary>
            CheckStuct
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.Clone(System.Object)">
            <summary>
            DeepClone
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.ConvertValue(System.Type,System.Object)">
            <summary>
            转换
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.ConvertValue``1(System.Object)">
            <summary>
            转换数据类型
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.FastMethodInvoke(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>
            快速执行Method
            </summary>
            <param name="obj"></param>
            <param name="method"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.Create``1">
            <summary>
            快速实例化一个T
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.Create(System.Type)">
            <summary>
            快速实例化一个FastCreateInstanceHandler
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.SetPropertyValue(System.Object,System.Reflection.PropertyInfo,System.Object)">
            <summary>
            设置属性值
            </summary>
            <param name="obj"></param>
            <param name="property"></param>
            <param name="value"></param>
        </member>
        <member name="M:WEF.Common.DataUtils.SetPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            设置属性值
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="M:WEF.Common.DataUtils.SetPropertyValue(System.Type,System.Object,System.String,System.Object)">
            <summary>
            设置属性值
            </summary>
            <param name="type"></param>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="M:WEF.Common.DataUtils.GetPropertyValue``1(``0,System.String)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.EntityArrayToDataTable``1(``0[])">
            <summary>
            从Entity数组转换成DataTable
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.DataRowToEntity``1(System.Data.DataRow)">
            <summary>
            DataRow转化为T
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.DataTableToEntityArray``1(System.Data.DataTable)">
            <summary>
            DataTable转化为TEntity[]
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.DataTableToEntityList``1(System.Data.DataTable)">
            <summary>
            DataTable转化为 List
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.GetNewParamCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.MakeUniqueKey(WEF.Common.Field)">
            <summary>
            生成唯一字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.GetWhere(WEF.Entity)">
            <summary>
            生成where
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.GetPrimaryKeyWhere(WEF.Entity)">
            <summary>
            生成主键条件
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.GetPrimaryKeyWhere``1(System.Array)">
            <summary>
            生成主键条件
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.FieldValueToDictionary(WEF.Common.Field[],System.Object[])">
            <summary>
            数组转成字典
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.ToString(WEF.Expressions.QueryOperator)">
            <summary>
            
            </summary>
            <param name="op"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.DataUtils.ReadNullableChar(System.Object)">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="M:WEF.Common.DataUtils.ThrowDataException(System.Exception,System.Int32,System.Data.IDataReader)">
            <summary>
            Throws a data exception, only used internally
            </summary>
            <param name="ex"></param>
            <param name="index"></param>
            <param name="reader"></param>
        </member>
        <member name="M:WEF.Common.Check.Require(System.Boolean,System.String)">
            <summary>
            Precondition check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Require(System.Boolean,System.String,System.Exception)">
            <summary>
            Precondition check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Require(System.Boolean)">
            <summary>
            Precondition check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Require(System.Object,System.String,WEF.Common.Check.ICheckStrategy[])">
            <summary>
            Precondition check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Ensure(System.Boolean,System.String)">
            <summary>
            Postcondition check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Ensure(System.Boolean,System.String,System.Exception)">
            <summary>
            Postcondition check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Ensure(System.Boolean)">
            <summary>
            Postcondition check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Ensure(System.Object,System.String,WEF.Common.Check.ICheckStrategy[])">
            <summary>
            Postcondition check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Invariant(System.Boolean,System.String)">
            <summary>
            Invariant check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Invariant(System.Boolean,System.String,System.Exception)">
            <summary>
            Invariant check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Invariant(System.Boolean)">
            <summary>
            Invariant check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Invariant(System.Object,System.String,WEF.Common.Check.ICheckStrategy[])">
            <summary>
            Invariant check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Assert(System.Boolean,System.String)">
            <summary>
            Assertion check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Assert(System.Boolean,System.String,System.Exception)">
            <summary>
            Assertion check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Assert(System.Boolean)">
            <summary>
            Assertion check.
            </summary>
        </member>
        <member name="M:WEF.Common.Check.Assert(System.Object,System.String,WEF.Common.Check.ICheckStrategy[])">
            <summary>
            Assertion check.
            </summary>
        </member>
        <member name="P:WEF.Common.Check.UseExceptions">
            <summary>
            Is exception handling being used?
            </summary>
        </member>
        <member name="T:WEF.Common.DesignByContractException">
            <summary>
            Exception raised when a contract is broken.
            Catch this exception type if you wish to differentiate between 
            any DesignByContract exception and other runtime exceptions.
             
            </summary>
        </member>
        <member name="M:WEF.Common.DesignByContractException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WEF.Common.DesignByContractException"/> class.
            </summary>
        </member>
        <member name="M:WEF.Common.DesignByContractException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WEF.Common.DesignByContractException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:WEF.Common.DesignByContractException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WEF.Common.DesignByContractException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:WEF.Common.PreconditionException">
            <summary>
            Exception raised when a precondition fails.
            </summary>
        </member>
        <member name="M:WEF.Common.PreconditionException.#ctor">
            <summary>
            Precondition Exception.
            </summary>
        </member>
        <member name="M:WEF.Common.PreconditionException.#ctor(System.String)">
            <summary>
            Precondition Exception.
            </summary>
        </member>
        <member name="M:WEF.Common.PreconditionException.#ctor(System.String,System.Exception)">
            <summary>
            Precondition Exception.
            </summary>
        </member>
        <member name="T:WEF.Common.PostconditionException">
            <summary>
            Exception raised when a postcondition fails.
            </summary>
        </member>
        <member name="M:WEF.Common.PostconditionException.#ctor">
            <summary>
            Postcondition Exception.
            </summary>
        </member>
        <member name="M:WEF.Common.PostconditionException.#ctor(System.String)">
            <summary>
            Postcondition Exception.
            </summary>
        </member>
        <member name="M:WEF.Common.PostconditionException.#ctor(System.String,System.Exception)">
            <summary>
            Postcondition Exception.
            </summary>
        </member>
        <member name="T:WEF.Common.InvariantException">
            <summary>
            Exception raised when an invariant fails.
            </summary>
        </member>
        <member name="M:WEF.Common.InvariantException.#ctor">
            <summary>
            Invariant Exception.
            </summary>
        </member>
        <member name="M:WEF.Common.InvariantException.#ctor(System.String)">
            <summary>
            Invariant Exception.
            </summary>
        </member>
        <member name="M:WEF.Common.InvariantException.#ctor(System.String,System.Exception)">
            <summary>
            Invariant Exception.
            </summary>
        </member>
        <member name="T:WEF.Common.AssertionException">
            <summary>
            Exception raised when an assertion fails.
            </summary>
        </member>
        <member name="M:WEF.Common.AssertionException.#ctor">
            <summary>
            Assertion Exception.
            </summary>
        </member>
        <member name="M:WEF.Common.AssertionException.#ctor(System.String)">
            <summary>
            Assertion Exception.
            </summary>
        </member>
        <member name="M:WEF.Common.AssertionException.#ctor(System.String,System.Exception)">
            <summary>
            Assertion Exception.
            </summary>
        </member>
        <member name="M:WEF.Common.CommonExpand.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            获取自定义特性，带有缓存功能，避免因.Net内部GetCustomAttributes没有缓存而带来的损耗
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="member"></param>
            <param name="inherit"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.CommonExpand.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>获取自定义属性</summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="member"></param>
            <param name="inherit"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Common.FastInvokeHandler">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Common.FastCreateInstanceHandler">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:WEF.Common.FastPropertyGetHandler">
            <summary>
            
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Common.FastPropertySetHandler">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="T:WEF.Common.DynamicCalls">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Common.DynamicCalls.dictInvoker">
            <summary>
            用于存放GetMethodInvoker的Dictionary
            </summary>
        </member>
        <member name="F:WEF.Common.DynamicCalls.dictCreator">
            <summary>
            用于存放GetInstanceCreator的Dictionary
            </summary>
        </member>
        <member name="M:WEF.Common.DynamicCalls.GetInstanceCreator(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="F:WEF.Common.DynamicCalls.dictGetter">
            <summary>
            用于存放GetPropertyGetter的Dictionary
            </summary>
        </member>
        <member name="F:WEF.Common.DynamicCalls.dictSetter">
            <summary>
            用于存放SetPropertySetter的Dictionary
            </summary>
        </member>
        <member name="M:WEF.Common.DynamicCalls.EmitCastToReference(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            
            </summary>
            <param name="ilGenerator"></param>
            <param name="type"></param>
        </member>
        <member name="M:WEF.Common.DynamicCalls.EmitBoxIfNeeded(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            
            </summary>
            <param name="ilGenerator"></param>
            <param name="type"></param>
        </member>
        <member name="M:WEF.Common.DynamicCalls.EmitFastInt(System.Reflection.Emit.ILGenerator,System.Int32)">
            <summary>
            
            </summary>
            <param name="ilGenerator"></param>
            <param name="value"></param>
        </member>
        <member name="T:WEF.Common.ModifyField">
            <summary>
            实体属性修改记录 （字段修改记录）
            </summary>
        </member>
        <member name="P:WEF.Common.ModifyField.Field">
            <summary>
            字段
            </summary>
        </member>
        <member name="P:WEF.Common.ModifyField.OldValue">
            <summary>
            原始值
            </summary>
        </member>
        <member name="P:WEF.Common.ModifyField.NewValue">
            <summary>
            新值
            </summary>
        </member>
        <member name="M:WEF.Common.ModifyField.#ctor(WEF.Common.Field,System.Object,System.Object)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="oldValue">旧值</param>
            <param name="newValue">新值</param>
        </member>
        <member name="T:WEF.Common.Table">
            <summary>
            标记实体类表名
            </summary>
        </member>
        <member name="F:WEF.Common.Table._tableName">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.Common.Table.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:WEF.Common.Table.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="tableName"></param>
            <param name="username"></param>
        </member>
        <member name="M:WEF.Common.Table.GetTableName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Table.GetUserName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:WEF.Common.EntityCache">
            <summary>
            实体信息缓存
            </summary>
        </member>
        <member name="F:WEF.Common.EntityCache._entityList">
            <summary>
            保存实体列表
            </summary>
        </member>
        <member name="F:WEF.Common.EntityCache.LockObj">
            <summary>
            lock object
            </summary>
        </member>
        <member name="M:WEF.Common.EntityCache.Reset">
            <summary>
            清空所有缓存
            </summary>
        </member>
        <member name="M:WEF.Common.EntityCache.Reset``1">
            <summary>
            清理具体实体的缓存
            </summary>
        </member>
        <member name="M:WEF.Common.EntityCache.GetTableName``1">
            <summary>
            返回表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.EntityCache.GetUserName``1">
            <summary>
            返回用户名
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.EntityCache.getTEntity``1">
            <summary>
            返回T
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.EntityCache.GetPrimaryKeyFields``1">
            <summary>
            获取主键字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.EntityCache.GetFields``1">
            <summary>
            返回所有字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.EntityCache.GetFirstField``1">
            <summary>
            返回第一个字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.EntityCache.GetIdentityField``1">
            <summary>
            返回标识字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.EntityCache.IsReadOnly``1">
            <summary>
            是否只读
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.EntityCache.GetSequence``1">
            <summary>
            标识列的名称（Oracle）
            </summary>
            <returns></returns>
        </member>
        <member name="T:WEF.Common.EntityUtils">
            <summary>
            实体帮助类
            </summary>
        </member>
        <member name="M:WEF.Common.EntityUtils.UpdateModel``1(``0)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Model</typeparam>
            <param name="t">model</param>
        </member>
        <member name="M:WEF.Common.EntityUtils.UpdateModel``1(``0,System.String)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Model</typeparam>
            <param name="t">model</param>
            <param name="prefix">前缀</param>
        </member>
        <member name="M:WEF.Common.EntityUtils.UpdateModel``1(``0,System.Collections.Specialized.NameValueCollection)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Model</typeparam>
            <param name="t">model</param>
            <param name="form">Request</param>
        </member>
        <member name="M:WEF.Common.EntityUtils.UpdateModel``1(``0,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>
            <param name="form">Request</param>
            <param name="prefix">前缀</param>
        </member>
        <member name="M:WEF.Common.EntityUtils.TryUpdateModel``1(``0)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>      
            <returns>转换是否成功</returns>
        </member>
        <member name="M:WEF.Common.EntityUtils.TryUpdateModel``1(``0,System.String)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>    
            <param name="prefix">前缀</param>
            <returns>转换是否成功</returns>
        </member>
        <member name="M:WEF.Common.EntityUtils.TryUpdateModel``1(``0,System.Collections.Specialized.NameValueCollection)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>
            <param name="form">Request</param>
            <returns>转换是否成功</returns>
        </member>
        <member name="M:WEF.Common.EntityUtils.TryUpdateModel``1(``0,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>
            <param name="form">Request</param>
            <param name="prefix">前缀</param>
            <returns>转换是否成功</returns>
        </member>
        <member name="M:WEF.Common.EntityUtils.SetDocumentValue``1(``0)">
            <summary>
            设置Web页面的值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:WEF.Common.EntityUtils.SetDocumentValue(System.Collections.Generic.Dictionary{WEF.Common.Field,System.Object})">
            <summary>
            设置Web页面的值
            </summary>
            <param name="fieldvalues"></param>
        </member>
        <member name="M:WEF.Common.EntityUtils.SetDocumentValue(System.Collections.Generic.Dictionary{WEF.Common.Field,System.Object},System.String)">
            <summary>
            设置Web页面的值
            </summary>
            <param name="fieldvalues"></param>
            <param name="prefix"></param>
        </member>
        <member name="M:WEF.Common.EntityUtils.SetDocumentValueString(System.Collections.Generic.Dictionary{WEF.Common.Field,System.Object},System.String)">
            <summary>
            返回赋值的脚本
            </summary>
            <param name="fieldvalues"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.EntityUtils.SetDocumentValueString``1(``0,System.String)">
            <summary>
            返回赋值的脚本
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prefix"></param>
            <param name="entity"></param>
        </member>
        <member name="M:WEF.Common.EntityUtils.SetDocumentValueString(WEF.Common.Field[],System.Object[],System.String)">
            <summary>
            返回赋值的脚本
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.EntityUtils.SetDocumentValue``1(``0,System.String)">
            <summary>
            设置Web页面的值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prefix"></param>
            <param name="entity"></param>
        </member>
        <member name="M:WEF.Common.EntityUtils.SetDocumentValue(WEF.Common.Field[],System.Object[])">
            <summary>
            设置Web页面值
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
        </member>
        <member name="M:WEF.Common.EntityUtils.SetDocumentValue(WEF.Common.Field[],System.Object[],System.String)">
            <summary>
            设置Web页面值
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="prefix"></param>
        </member>
        <member name="M:WEF.Common.EntityUtils.SetDocumentValueClear``1(System.String)">
            <summary>
            清空Web页面的值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prefix"></param>
        </member>
        <member name="M:WEF.Common.EntityUtils.SetDocumentValueClearString``1(System.String)">
            <summary>
            返回清空Web页面的值的脚本
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prefix"></param>
        </member>
        <member name="M:WEF.Common.EntityUtils.GetField``1(System.String)">
            <summary>
            根据字段名返回实体字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldName"></param>
            <returns>返回null 就表示字段不存在</returns>
        </member>
        <member name="M:WEF.Common.EntityUtils.SetValue``1(``0,``0)">
            <summary>
            实体赋值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="toEntity">被赋值实体</param>
            <param name="fromEntity">来源实体</param>
            <returns>返回null 就表示fromEntity==null</returns>
        </member>
        <!-- 对于成员“M:WEF.Common.EntityUtils.GetDeserializer(System.Type,System.Data.IDataReader,System.Int32,System.Int32,System.Boolean)”忽略有格式错误的 XML 注释 -->
        <member name="M:WEF.Common.EntityUtils.GetStructDeserializer(System.Type,System.Int32)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.EntityUtils.GetSettableProps(System.Type)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.EntityUtils.GetSettableFields(System.Type)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.EntityUtils.EmitInt32(System.Reflection.Emit.ILGenerator,System.Int32)">
            <summary>
            
            </summary>
            <param name="il"></param>
            <param name="value"></param>
        </member>
        <member name="M:WEF.Common.EntityUtils.GetTypeDeserializer(System.Type,System.Data.IDataReader,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="reader"></param>
            <param name="startBound"></param>
            <param name="length"></param>
            <param name="returnNullIfFirstMissing"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Common.EntityUtils.FastExpando">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.Common.EntityUtils.ReaderToEnumerable``1(System.Data.IDataReader)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:WEF.Common.JoinType">
            <summary>
            连接类型
            </summary>
        </member>
        <member name="F:WEF.Common.JoinType.InnerJoin">
            <summary>
            InnerJoin
            </summary>
        </member>
        <member name="F:WEF.Common.JoinType.LeftJoin">
            <summary>
            LeftJoin
            </summary>
        </member>
        <member name="F:WEF.Common.JoinType.RightJoin">
            <summary>
            RightJoin
            </summary>
        </member>
        <member name="F:WEF.Common.JoinType.CrossJoin">
            <summary>
            CrossJoin
            </summary>
        </member>
        <member name="F:WEF.Common.JoinType.FullJoin">
            <summary>
            FullJoin
            </summary>
        </member>
        <member name="T:WEF.Common.EntityState">
            <summary>
            标记实体状态
            </summary>
        </member>
        <member name="F:WEF.Common.EntityState.Unchanged">
            <summary>
            标记为不做任何数据库操作。
            </summary>
        </member>
        <member name="F:WEF.Common.EntityState.Added">
            <summary>
            标记为插入状态。.Save()触发。
            </summary>
        </member>
        <member name="F:WEF.Common.EntityState.Deleted">
            <summary>
            标记为删除状态。.Save()触发。
            </summary>
        </member>
        <member name="F:WEF.Common.EntityState.Modified">
            <summary>
            标记为修改状态。.Save()触发。
            </summary>
        </member>
        <member name="T:WEF.Common.Field`1">
            <summary>
            字段信息   
            </summary>
            <typeparam name="T">实体</typeparam>
        </member>
        <member name="M:WEF.Common.Field`1.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fileName">字段名</param>
        </member>
        <member name="T:WEF.Common.Field">
            <summary>
            字段信息
            </summary>
        </member>
        <member name="M:WEF.Common.Field.#ctor">
            <summary>
            空的构造函数
            </summary>
        </member>
        <member name="M:WEF.Common.Field.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:WEF.Common.Field.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:WEF.Common.Field.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
            <param name="tableName"></param>
            <param name="description"></param>
        </member>
        <member name="M:WEF.Common.Field.#ctor(System.String,System.String,System.Nullable{System.Data.DbType},System.Nullable{System.Int32},System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
            <param name="tableName"></param>
            <param name="parameterDbType"></param>
            <param name="parameterSize"></param>
            <param name="description"></param>
        </member>
        <member name="M:WEF.Common.Field.#ctor(System.String,System.String,System.Nullable{System.Data.DbType},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
            <param name="tableName"></param>
            <param name="parameterDbType"></param>
            <param name="parameterSize"></param>
            <param name="description"></param>
            <param name="aliasName"></param>
        </member>
        <member name="F:WEF.Common.Field.fieldName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="F:WEF.Common.Field.tableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:WEF.Common.Field.aliasName">
            <summary>
            字段别名
            </summary>
        </member>
        <member name="F:WEF.Common.Field.description">
            <summary>
            字段描述
            </summary>
        </member>
        <member name="F:WEF.Common.Field.parameterDbType">
            <summary>
            字段数据库中类型
            </summary>
        </member>
        <member name="F:WEF.Common.Field.parameterSize">
            <summary>
            字段数据库中长度
            </summary>
        </member>
        <member name="F:WEF.Common.Field.All">
            <summary>
            所有字段   就是  *  
            </summary>
        </member>
        <member name="P:WEF.Common.Field.ParameterDbType">
            <summary>
            字段数据库中类型
            </summary>
        </member>
        <member name="P:WEF.Common.Field.ParameterSize">
            <summary>
            字段数据库中长度
            </summary>
        </member>
        <member name="P:WEF.Common.Field.FieldName">
            <summary>
            返回 字段名
            </summary>
        </member>
        <member name="P:WEF.Common.Field.TableName">
            <summary>
            返回  表名
            </summary>
        </member>
        <member name="P:WEF.Common.Field.Name">
            <summary>
            返回  别名，当别名为空返回字段名
            </summary>
        </member>
        <member name="P:WEF.Common.Field.PropertyName">
            <summary>
            返回属性名  即fileName
            </summary>
        </member>
        <member name="P:WEF.Common.Field.AliasName">
            <summary>
            返回  别名
            </summary>
        </member>
        <member name="P:WEF.Common.Field.Description">
            <summary>
            返回  字段描述
            </summary>
        </member>
        <member name="P:WEF.Common.Field.TableFieldName">
            <summary>
            返回  表名.字段名
            </summary>
        </member>
        <member name="P:WEF.Common.Field.FullName">
            <summary>
            返回  表名.字段名 AS 别名
            </summary>
        </member>
        <member name="P:WEF.Common.Field.Year">
            <summary>
            datepart   year
            </summary>
        </member>
        <member name="P:WEF.Common.Field.Month">
            <summary>
            datepart   month
            </summary>
        </member>
        <member name="P:WEF.Common.Field.Day">
            <summary>
            datepart  day
            </summary>
        </member>
        <member name="P:WEF.Common.Field.Desc">
            <summary>
            倒叙
            </summary>
        </member>
        <member name="P:WEF.Common.Field.Asc">
            <summary>
            正序
            </summary>
        </member>
        <member name="P:WEF.Common.Field.GroupBy">
            <summary>
            分组
            </summary>
        </member>
        <member name="M:WEF.Common.Field.Equals(WEF.Common.Field)">
            <summary>
            比较
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.IsNullOrEmpty(WEF.Common.Field)">
            <summary>
            判断是否为空
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SetTableName(System.String)">
            <summary>
            设置所属表名
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.As(System.String)">
            <summary>
            AS
            </summary>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.As(WEF.Common.Field)">
            <summary>
            AS
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.IsNull(WEF.Common.Field)">
            <summary>
            判断字段是否为Null
            </summary>
            <param name="field">字段实体</param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.IsNull(System.Object)">
            <summary>
            判断字段是否为Null
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Count">
            <summary>
            Count
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Distinct">
            <summary>
            Distinct
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Sum">
            <summary>
            Sum
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Avg">
            <summary>
            Avg
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Len">
            <summary>
            len
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Trim">
            <summary>
            ltrim and  rtrim
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Max">
            <summary>
            Max
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Min">
            <summary>
            Min
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Left(System.Int32)">
            <summary>
            Left
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Right(System.Int32)">
            <summary>
            Right
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Substring(System.Int32,System.Int32)">
            <summary>
            substring
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.IndexOf(System.String)">
            <summary>
            charindex
            </summary>
            <param name="subString"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Replace(System.String,System.String)">
            <summary>
            replace
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.createWhereClip(WEF.Common.Field,WEF.Common.Field,WEF.Expressions.QueryOperator)">
            <summary>
            创建whereclip
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <param name="oper"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.createField(WEF.Common.Field,WEF.Common.Field,WEF.Expressions.QueryOperator)">
            <summary>
            创建Field
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <param name="oper"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:WEF.Common.Field.BitwiseAND(WEF.Common.Field)”忽略有格式错误的 XML 注释 -->
        <member name="M:WEF.Common.Field.BitwiseOR(WEF.Common.Field)">
            <summary>
            |
            </summary>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.BitwiseXOR(WEF.Common.Field)">
            <summary>
            ^
            </summary>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.BitwiseNOT(WEF.Common.Field)">
            <summary>
            ~
            </summary>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Contain(System.Object)">
            <summary>
            like '%value%' 模糊查询，同Like
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Like(System.Object)">
            <summary>
            like '%value%' 模糊查询，同  Contain
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.BeginWith(System.Object)">
            <summary>
            BeginWith  
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.EndWith(System.Object)">
            <summary>
            EndWith  
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:WEF.Common.Field.likeString">
            <summary>
            LIKE %
            </summary>
        </member>
        <member name="F:WEF.Common.Field.selectInString">
            <summary>
            IN
            </summary>
        </member>
        <member name="F:WEF.Common.Field.selectNotInString">
            <summary>
            NOT IN
            </summary>
        </member>
        <member name="M:WEF.Common.Field.selectInOrNotIn``1(WEF.Common.Field,System.String,``0[])">
            <summary>
            子查询
            </summary>
            <param name="field"></param>
            <param name="join"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.selectInOrNotIn``1(WEF.Common.Field,System.String,System.Boolean,``0[])">
            <summary>
            子查询
            </summary>
            <param name="field"></param>
            <param name="join"></param>
            <param name="isParameter">是否参数化</param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SelectIn(System.Object[])">
            <summary>
            SelectIn  
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.In(System.Object[])">
            <summary>
            同SelectIn。
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SelectIn``1(``0[])">
            <summary>
            where field in (value,value,value)。传入Array或List&lt;T>。
            </summary>
            <param name="values"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.In``1(``0[])">
            <summary>
            where field in (value,value,value)。同SelectIn。传入Array或List&lt;T>。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SelectIn``1(System.Collections.Generic.List{``0})">
            <summary>
            where field in (value,value,value)。 传入Array或List&lt;T>。
            </summary>
            <param name="values"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.In``1(System.Collections.Generic.List{``0})">
            <summary>
            where field in (value,value,value)。同SelectIn。传入Array或List&lt;T>。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SelectNotIn(System.Object[])">
            <summary>
            where field in (value,value,value)。同In.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.NotIn(System.Object[])">
            <summary>
            同SelectNotIn。
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SelectNotIn``1(``0[])">
            <summary>
            SelectNotIn  。传入Array或List&lt;T>。
            </summary>
            <param name="values"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.NotIn``1(``0[])">
            <summary>
            同SelectNotIn。传入Array或List&lt;T>。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SelectNotIn``1(System.Collections.Generic.List{``0})">
            <summary>
            SelectNotIn。传入Array或List&lt;T>。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.NotIn``1(System.Collections.Generic.List{``0})">
            <summary>
            同SelectNotIn。传入Array或List&lt;T>。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SubQueryIn(WEF.Search)">
            <summary>
            SubQueryIn   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SubQueryNotIn(WEF.Search)">
            <summary>
            SubQueryNotIn   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.subQuery(WEF.Common.Field,WEF.Search,WEF.Expressions.QueryOperator)">
            <summary>
            组合 子查询
            </summary>
            <param name="field"></param>
            <param name="from"></param>
            <param name="oper"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.subQuery(WEF.Common.Field,WEF.Search,System.String)">
            <summary>
            组合 子查询
            </summary>
            <param name="field"></param>
            <param name="from"></param>
            <param name="join"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SubQueryEqual(WEF.Search)">
            <summary>
            SubQueryEqual   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SubQueryNotEqual(WEF.Search)">
            <summary>
            SubQueryNotEqual   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SubQueryLess(WEF.Search)">
            <summary>
            SubQueryLess   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SubQueryLessOrEqual(WEF.Search)">
            <summary>
            SubQueryLessOrEqual   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SubQueryGreater(WEF.Search)">
            <summary>
            SubQueryGreater   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.SubQueryGreaterOrEqual(WEF.Search)">
            <summary>
            SubQueryGreaterOrEqual   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.IsNull">
            <summary>
            字段 为null <example>field is null</example>
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.IsNotNull">
            <summary>
            字段 为null <example>field is not null</example>
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.Between(System.Object,System.Object)">
            <summary>
            Between操作
            </summary>
            <example>
            <![CDATA[ a>=value and a<=value ]]>
            </example>
            <param name="leftValue"></param>
            <param name="rightValue"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Equality(WEF.Common.Field,WEF.Common.Field)">
            <summary>
            
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Inequality(WEF.Common.Field,WEF.Common.Field)">
            <summary>
            
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_GreaterThan(WEF.Common.Field,WEF.Common.Field)">
            <summary>
            
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_GreaterThanOrEqual(WEF.Common.Field,WEF.Common.Field)">
            <summary>
            
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_LessThan(WEF.Common.Field,WEF.Common.Field)">
            <summary>
            
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_LessThanOrEqual(WEF.Common.Field,WEF.Common.Field)">
            <summary>
            
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Equality(WEF.Common.Field,System.Object)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Equality(System.Object,WEF.Common.Field)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Inequality(WEF.Common.Field,System.Object)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Inequality(System.Object,WEF.Common.Field)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_GreaterThan(WEF.Common.Field,System.Object)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_GreaterThan(System.Object,WEF.Common.Field)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_GreaterThanOrEqual(WEF.Common.Field,System.Object)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_GreaterThanOrEqual(System.Object,WEF.Common.Field)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_LessThan(WEF.Common.Field,System.Object)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_LessThan(System.Object,WEF.Common.Field)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_LessThanOrEqual(WEF.Common.Field,System.Object)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_LessThanOrEqual(System.Object,WEF.Common.Field)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Addition(WEF.Common.Field,WEF.Common.Field)">
            <summary>
            +
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Subtraction(WEF.Common.Field,WEF.Common.Field)">
            <summary>
            -
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Multiply(WEF.Common.Field,WEF.Common.Field)">
            <summary>
            *
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Division(WEF.Common.Field,WEF.Common.Field)">
            <summary>
            /
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Modulus(WEF.Common.Field,WEF.Common.Field)">
            <summary>
            %
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Addition(WEF.Common.Field,System.Object)">
            <summary>
            +
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Subtraction(WEF.Common.Field,System.Object)">
            <summary>
            -
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Multiply(WEF.Common.Field,System.Object)">
            <summary>
            *
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Division(WEF.Common.Field,System.Object)">
            <summary>
            /
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Modulus(WEF.Common.Field,System.Object)">
            <summary>
            %
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Addition(System.Object,WEF.Common.Field)">
            <summary>
            +
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Subtraction(System.Object,WEF.Common.Field)">
            <summary>
            -
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Multiply(System.Object,WEF.Common.Field)">
            <summary>
            *
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Division(System.Object,WEF.Common.Field)">
            <summary>
            /
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.Field.op_Modulus(System.Object,WEF.Common.Field)">
            <summary>
            %
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Common.FieldAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:WEF.Common.FieldAttribute.Field">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.Common.FieldAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="T:WEF.Common.LogHandler">
            <summary>
            A delegate used for log.
            </summary>
            <param name="logMsg">The msg to write to log.</param>
        </member>
        <member name="T:WEF.Common.ILogable">
            <summary>
            Mark a implementing class as loggable.
            </summary>
        </member>
        <member name="E:WEF.Common.ILogable.OnLog">
            <summary>
            OnLog event.
            </summary>
        </member>
        <member name="T:WEF.Common.SerializationManager">
            <summary>
            The serialization manager.
            </summary>
        </member>
        <member name="T:WEF.Common.SerializationManager.TypeSerializeHandler">
            <summary>
            The serialize delegate.
            </summary>
            <param name="obj">obj to be serialized.</param>
            <returns></returns>
        </member>
        <member name="T:WEF.Common.SerializationManager.TypeDeserializeHandler">
            <summary>
            The deserialize delegate.
            </summary>
            <param name="data">the data to be deserialied.</param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.SerializationManager.Serialize(System.Object)">
            <summary>
            Serializes the specified obj.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.SerializationManager.Deserialize(System.Type,System.String)">
            <summary>
            Deserializes the specified return type.
            </summary>
            <param name="returnType">Type of the return.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:WEF.Common.SerializationManager.RegisterSerializeHandler(System.Type,WEF.Common.SerializationManager.TypeSerializeHandler,WEF.Common.SerializationManager.TypeDeserializeHandler)">
            <summary>
            Registers the serialize handler.
            </summary>
            <param name="type">The type.</param>
            <param name="serializeHandler">The serialize handler.</param>
            <param name="deserializeHandler">The deserialize handler.</param>
        </member>
        <member name="M:WEF.Common.SerializationManager.UnregisterSerializeHandler(System.Type)">
            <summary>
            Unregisters the serialize handler.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="T:WEF.DatabaseType">
            <summary>
            Type of a database.
            </summary>
        </member>
        <member name="F:WEF.DatabaseType.SqlServer">
            <summary>
            SQL Server 2000
            </summary>
        </member>
        <member name="F:WEF.DatabaseType.MsAccess">
            <summary>
            MsAccess
            </summary>
        </member>
        <member name="F:WEF.DatabaseType.SqlServer9">
            <summary>
            SQL Server 2005
            </summary>
        </member>
        <member name="F:WEF.DatabaseType.Oracle">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="F:WEF.DatabaseType.Sqlite3">
            <summary>
            Sqlite
            </summary>
        </member>
        <member name="F:WEF.DatabaseType.MySql">
            <summary>
            MySql
            </summary>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.DeleteTable(System.String,System.String)">
            <summary>
            删除数据表
            </summary>
            <param name="DbName">数据库名</param>
            <param name="TableName">表名</param>
            <returns>删除成功否</returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.ExecuteSql(System.String,System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="DbName">数据库名</param>
            <param name="SQLString">数据表名</param>
            <returns>返回影响记录数</returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetColumnInfoList(System.String,System.String)">
            <summary>
            返回数据表字段列(字段)信息表
             返回表字段结构:
                colorder,ColumnName,TypeName,Length,Preci,Scale,
                IsIdentity('√'),isPK('√'),cisNull('√'),defaultVal,deText
            </summary>
            <param name="DbName">数据库名</param>
            <param name="TableName">数据表名</param>
            <returns>信息表</returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetColumnList(System.String,System.String)">
            <summary>
            返回数据列表(简要)
              返回结构:
                colorder,ColumnName,TypeName
            </summary>
            <param name="DbName">数据库名</param>
            <param name="TableName">数据表名</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetDBList">
            <summary>
            返回数据库列表
                返回表结构: name,cuser(所有者),type(对象类型=DB),dates(创建时间)
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetKeyName(System.String,System.String)">
            <summary>
            返回有标识的主键
              返回表结构:
                colorder,ColumnName,TypeName,Length,Preci,Scale,
                IsIdentity('√'),isPK('√'),cisNull('√'),defaultVal,deText 
            </summary>
            <param name="DbName">数据库名</param>
            <param name="TableName">数据表名</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetObjectInfo(System.String,System.String)">
            <summary>
            返回对象SQL脚本。如存储过程、默认值等
            </summary>
            <param name="DbName">数据库名</param>
            <param name="objName">对象名</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetProcInfo(System.String)">
            <summary>
            返回存储过程列表
              返回表结构：name,cuser(所有人),type(对象类型=P),dates(创建时间)
            </summary>
            <param name="DbName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetProcs(System.String)">
            <summary>
            返回存储过程名称列表
             返回表结构：name
            </summary>
            <param name="DbName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetSingle(System.String,System.String)">
            <summary>
            返回一个值
            </summary>
            <param name="DbName"></param>
            <param name="SQLString"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetTabData(System.String,System.String,System.Int32)">
            <summary>
            返回数据表所有(原始)记录
            </summary>
            <param name="DbName">数据库名</param>
            <param name="TableName">表名</param>
            <param name="TopNum">返回前N条记录，为0表示所有</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetTables(System.String)">
            <summary>
            返回所有用户数据表
              返回表结构：name
            </summary>
            <param name="DbName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetTablesInfo(System.String)">
            <summary>
            返回用户数据表详细信息
              返回表结构：name,cuser(所有者),type(对象类型=U),dates(创建时间)
            </summary>
            <param name="DbName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetTabViews(System.String)">
            <summary>
            返回数据表、视图、存储过程等对象信息列表
              返回表结构：
               [name],type（对象类型）
            </summary>
            <param name="DbName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetTabViewsInfo(System.String)">
            <summary>
            返回数据表、视图、存储过程等对象详细信息列表
              返回表结构：
                name,cuser(所有者),type(对象类型),dates(创建时间)
            </summary>
            <param name="DbName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetVersion">
            <summary>
            返回数据服务器版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetVIEWs(System.String)">
            <summary>
            返回数据视图名称列表
               返回表结构：name
            </summary>
            <param name="DbName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.GetVIEWsInfo(System.String)">
            <summary>
            返回数据视图详细列表
              返回表结构：
                name,cuser(所有者),type(对象类型),dates(创建时间)
            </summary>
            <param name="DbName">数据库名</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.Query(System.String,System.String)">
            <summary>
            返回查询结果
            </summary>
            <param name="DbName">数据库名</param>
            <param name="SQLString">SQL语句</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.IDbObject.RenameTable(System.String,System.String,System.String)">
            <summary>
            重命名对象
            </summary>
            <param name="DbName">数据库名</param>
            <param name="OldName">原名</param>
            <param name="NewName">新名</param>
            <returns>成功否</returns>
        </member>
        <member name="P:WEF.DbDAL.IDbObject.DbConnectStr">
            <summary>
            获取或设置数据连接字符串
            </summary>
        </member>
        <member name="P:WEF.DbDAL.IDbObject.DbType">
            <summary>
            获取数据库类型(SQL2000,SQL2005,Oracle,OleDb)
            </summary>
        </member>
        <member name="T:WEF.DbDAL.MySql.DbObject">
            <summary>
            数据库信息类。
            </summary>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.#ctor(System.String)">
            <summary>
            构造一个数据库连接
            </summary>
            <param name="connect"></param>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.#ctor(System.Boolean,System.String,System.String,System.String)">
            <summary>
            构造一个连接字符串
            </summary>
            <param name="SSPI">是否windows集成认证</param>
            <param name="Ip">服务器IP</param>
            <param name="User">用户名</param>
            <param name="Pass">密码</param>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.#ctor(System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            构造一个连接字符串
            </summary>
            <param name="SSPI">是否windows集成认证</param>
            <param name="Ip">服务器IP</param>
            <param name="User">用户名</param>
            <param name="Pass">密码</param>
            <param name="port">端口</param>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.IsDboSp">
            <summary>
            是否采用sp的方式获取数据结构信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.OpenDB(System.String)">
            <summary>
            打开数据库
            </summary>
            <param name="DbName">要打开的数据库</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.RunProcedure(System.String,System.String,System.Data.IDataParameter[],System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="storedProcName">存储过程名</param>
            <param name="parameters">存储过程参数</param>
            <param name="tableName">DataSet结果中的表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.CompareStrByOrder(System.String,System.String)">
            <summary>
            List根据字符串排序
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>0代表相等，-1代表y大于x，1代表x大于y</returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetDBList">
            <summary>
            得到数据库的名字列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetTables(System.String)">
            <summary>
            得到数据库的所有表名
            </summary>
            <param name="DbName">数据库</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetVIEWs(System.String)">
            <summary>
            得到数据库的所有视图名
            </summary>
            <param name="DbName">数据库</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetVIEWsSP(System.String)">
            <summary>
            得到数据库的所有视图名
            </summary>
            <param name="DbName">数据库</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetTabViews(System.String)">
            <summary>
            得到数据库的所有表和视图名
            </summary>
            <param name="DbName">数据库</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetTabViewsSP(System.String)">
            <summary>
            得到数据库的所有表和视图名
            </summary>
            <param name="DbName">数据库</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetProcs(System.String)">
            <summary>
            得到数据库的所有存储过程名
            </summary>
            <param name="DbName">数据库</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetTablesInfo(System.String)">
            <summary>
            得到数据库的所有表的详细信息
            </summary>
            <param name="DbName">数据库</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetVIEWsInfo(System.String)">
            <summary>
            得到数据库的所有视图的详细信息
            </summary>
            <param name="DbName">数据库</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetTabViewsInfo(System.String)">
            <summary>
            得到数据库的所有表和视图的详细信息
            </summary>
            <param name="DbName">数据库</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetProcInfo(System.String)">
            <summary>
            得到数据库的所有存储过程的详细信息
            </summary>
            <param name="DbName">数据库</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetObjectInfo(System.String,System.String)">
            <summary>
            得到视图或存储过程的定义语句
            </summary>
            <param name="DbName">数据库</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetColumnList(System.String,System.String)">
            <summary>
            得到数据库里表或视图的列名和类型
            </summary>
            <param name="DbName">库</param>
            <param name="TableName">表</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetColumnInfoList(System.String,System.String)">
            <summary>
            得到数据库里表或视图的列的详细信息
            </summary>
            <param name="DbName">库</param>
            <param name="TableName">表</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetKeyName(System.String,System.String)">
            <summary>
            得到数据库里表的主键
            </summary>
            <param name="DbName">库</param>
            <param name="TableName">表</param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetTabData(System.String,System.String)">
            <summary>
            得到数据表里的数据
            </summary>
            <param name="DbName"></param>
            <param name="TableName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetTabDataBySQL(System.String,System.String)">
            <summary>
            根据SQL查询得到数据表里的数据
            </summary>
            <param name="DbName"></param>
            <param name="TableName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.RenameTable(System.String,System.String,System.String)">
            <summary>
            修改表名称
            </summary>
            <param name="OldName"></param>
            <param name="NewName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.DeleteTable(System.String,System.String)">
            <summary>
            删除表
            </summary>	
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetVersion">
            <summary>
            得到版本号
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.DbDAL.MySql.DbObject.GetTableScript(System.String,System.String)">
            <summary>
            得到创建表 的脚本
            </summary>
            <returns></returns>
        </member>
        <member name="P:WEF.DbDAL.SQL2000.DbObject.DbType">
            <summary>
            获取数据库类型
            </summary>
        </member>
        <member name="M:WEF.DbDAL.SQL2005.DbObject.GetTables(System.String)">
            <summary>
            获取数据表信息
            </summary>
            <param name="DbName"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Db.BatchCommander">
            <summary>
            BatchCommander is used to execute batch queries.
            </summary>
        </member>
        <member name="M:WEF.Db.BatchCommander.ExecuteBatch">
            <summary>
            执行
            </summary>
        </member>
        <member name="M:WEF.Db.BatchCommander.#ctor(WEF.Db.Database,System.Int32,System.Data.IsolationLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:WEF.Db.BatchCommander"/> class.
            </summary>
            <param name="db">The db.</param>
            <param name="batchSize">Size of the batch.</param>
            <param name="il">The il.</param>
        </member>
        <member name="M:WEF.Db.BatchCommander.#ctor(WEF.Db.Database,System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            Initializes a new instance of the <see cref="T:WEF.Db.BatchCommander"/> class.
            </summary>
            <param name="db">The db.</param>
            <param name="batchSize">Size of the batch.</param>
            <param name="tran">The tran.</param>
        </member>
        <member name="M:WEF.Db.BatchCommander.#ctor(WEF.Db.Database,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WEF.Db.BatchCommander"/> class.
            </summary>
            <param name="db">The db.</param>
            <param name="batchSize">Size of the batch.</param>
        </member>
        <member name="M:WEF.Db.BatchCommander.Process(System.Data.Common.DbCommand)">
            <summary>
            Processes the specified CMD.
            </summary>
            <param name="cmd">The CMD.</param>
        </member>
        <member name="M:WEF.Db.BatchCommander.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="T:WEF.Db.CommandCreator">
            <summary>
            根据实体T的Fileds来生成对应SQL并封装成Command
            </summary>
        </member>
        <member name="F:WEF.Db.CommandCreator.db">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.Db.CommandCreator.#ctor(WEF.Db.Database)">
            <summary>
            
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:WEF.Db.CommandCreator.CreateUpdateCommand``1(``0,WEF.Expressions.WhereClip)">
            <summary>
            创建更新DbCommand
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.CommandCreator.CreateUpdateCommand``1(WEF.Common.Field[],System.Object[],WEF.Expressions.WhereClip)">
            <summary>
            创建更新DbCommand
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.CommandCreator.CreateDeleteCommand(System.String,System.String,WEF.Expressions.WhereClip)">
            <summary>
            创建删除DbCommand
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.CommandCreator.CreateDeleteCommand``1(WEF.Expressions.WhereClip)">
            <summary>
            创建删除DbCommand
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.CommandCreator.CreateInsertCommand``1(WEF.Common.Field[],System.Object[])">
            <summary>
            创建添加DbCommand
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.CommandCreator.CreateInsertCommand``1(``0)">
            <summary>
            创建添加DbCommand
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Db.Database">
            <summary>
            Database
            </summary>
        </member>
        <member name="F:WEF.Db.Database.Default">
            <summary>
            Default Database
            </summary>
        </member>
        <member name="M:WEF.Db.Database.#ctor(WEF.Provider.DbProvider)">
            <summary>
            构造函数
            </summary>
            <param name="dbProvider"></param>
        </member>
        <member name="P:WEF.Db.Database.ConnectionString">
            <summary>
            Gets the connect string.
            </summary>
            <value>The connect string.</value>
        </member>
        <member name="P:WEF.Db.Database.DbProviderFactory">
            <summary>
            Gets the DbProviderFactory
            </summary>
        </member>
        <member name="P:WEF.Db.Database.DbProvider">
            <summary>
            Gets the db provider.
            </summary>
            <value>The db provider.</value>
        </member>
        <member name="E:WEF.Db.Database.OnLog">
            <summary>
            OnLog event.
            </summary>
        </member>
        <member name="M:WEF.Db.Database.WriteLog(System.Data.Common.DbCommand)">
            <summary>
            Writes the log.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:WEF.Db.Database.WriteLog(System.String)">
            <summary>
            Writes the log.
            </summary>
            <param name="logMsg">The log MSG.</param>
        </member>
        <member name="M:WEF.Db.Database.CloseConnection(System.Data.Common.DbCommand)">
            <summary>
            Closes the connection.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:WEF.Db.Database.CloseConnection(System.Data.Common.DbConnection)">
            <summary>
            Closes the connection.
            </summary>
            <param name="conn">The conn.</param>
        </member>
        <member name="M:WEF.Db.Database.CloseConnection(System.Data.Common.DbTransaction)">
            <summary>
            Closes the connection.
            </summary>
            <param name="tran">The tran.</param>
        </member>
        <member name="M:WEF.Db.Database.GetConnection">
            <summary>
            Gets the connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.Database.GetConnection(System.Boolean)">
            <summary>
            Gets the connection.
            </summary>
            <param name="tryOpen">if set to <c>true</c> [try open].</param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.Database.CreateConnection">
            <summary>
            <para>When overridden in a derived class, gets the connection for this database.</para>
            <seealso cref="T:System.Data.Common.DbConnection"/>        
            </summary>
            <returns>
            <para>The <see cref="T:System.Data.Common.DbConnection"/> for this database.</para>
            </returns>
        </member>
        <member name="M:WEF.Db.Database.CreateConnection(System.Boolean)">
            <summary>
            <para>When overridden in a derived class, gets the connection for this database.</para>
            <seealso cref="T:System.Data.Common.DbConnection"/>        
            </summary>
            <returns>
            <para>The <see cref="T:System.Data.Common.DbConnection"/> for this database.</para>
            </returns>
        </member>
        <member name="M:WEF.Db.Database.GetStoredProcCommand(System.String)">
            <summary>
            <para>When overridden in a derived class, creates a <see cref="T:System.Data.Common.DbCommand"/> for a stored procedure.</para>
            </summary>
            <param name="storedProcedureName"><para>The name of the stored procedure.</para></param>
            <returns><para>The <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure.</para></returns>       
        </member>
        <member name="M:WEF.Db.Database.GetSqlStringCommand(System.String)">
            <summary>
            <para>When overridden in a derived class, creates an <see cref="T:System.Data.Common.DbCommand"/> for a SQL query.</para>
            </summary>
            <param name="query"><para>The text of the query.</para></param>        
            <returns><para>The <see cref="T:System.Data.Common.DbCommand"/> for the SQL query.</para></returns>        
        </member>
        <member name="M:WEF.Db.Database.GetDataAdapter">
            <summary>
            Gets a DbDataAdapter with Standard update behavior.
            </summary>
            <returns>A <see cref="T:System.Data.Common.DbDataAdapter"/>.</returns>
            <seealso cref="T:System.Data.Common.DbDataAdapter"/>
        </member>
        <member name="M:WEF.Db.Database.LoadDataSet(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            <para>Loads a <see cref="T:System.Data.DataSet"/> from command text in a transaction.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command in.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to fill.</para>
            </param>
            <param name="tableNames">
            <para>An array of table name mappings for the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
        </member>
        <member name="M:WEF.Db.Database.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" /> and returns an <see cref="T:System.Data.IDataReader"></see> through which the result can be read.
            It is the responsibility of the caller to close the connection and reader when finished.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>An <see cref="T:System.Data.IDataReader"/> object.</para>
            </returns>        
        </member>
        <member name="M:WEF.Db.Database.ExecuteReader(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" /> within the given 
            <paramref name="transaction" /> and returns an <see cref="T:System.Data.IDataReader"></see> through which the result can be read.
            It is the responsibility of the caller to close the connection and reader when finished.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>An <see cref="T:System.Data.IDataReader"/> object.</para>
            </returns>        
        </member>
        <member name="M:WEF.Db.Database.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String)">
            <summary>
            <para>Executes the <paramref name="command"/> and adds a new <see cref="T:System.Data.DataTable"></see> to the existing <see cref="T:System.Data.DataSet"></see>.</para>
            </summary>
            <param name="command">
            <para>The <see cref="T:System.Data.Common.DbCommand"/> to execute.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to load.</para>
            </param>
            <param name="tableName">
            <para>The name for the new <see cref="T:System.Data.DataTable"/> to add to the <see cref="T:System.Data.DataSet"/>.</para>
            </param>        
            <exception cref="T:System.ArgumentNullException">Any input parameter was <see langword="null"/> (<b>Nothing</b> in Visual Basic)</exception>
            <exception cref="T:System.ArgumentException">tableName was an empty string</exception>
        </member>
        <member name="M:WEF.Db.Database.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> within the given <paramref name="transaction" /> and adds a new <see cref="T:System.Data.DataTable"></see> to the existing <see cref="T:System.Data.DataSet"></see>.</para>
            </summary>
            <param name="command">
            <para>The <see cref="T:System.Data.Common.DbCommand"/> to execute.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to load.</para>
            </param>
            <param name="tableName">
            <para>The name for the new <see cref="T:System.Data.DataTable"/> to add to the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>        
            <exception cref="T:System.ArgumentNullException">Any input parameter was <see langword="null"/> (<b>Nothing</b> in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">tableName was an empty string.</exception>
        </member>
        <member name="M:WEF.Db.Database.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[])">
            <summary>
            <para>Loads a <see cref="T:System.Data.DataSet"/> from a <see cref="T:System.Data.Common.DbCommand"/>.</para>
            </summary>
            <param name="command">
            <para>The command to execute to fill the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to fill.</para>
            </param>
            <param name="tableNames">
            <para>An array of table name mappings for the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
        </member>
        <member name="M:WEF.Db.Database.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[],System.Data.Common.DbTransaction)">
            <summary>
            <para>Loads a <see cref="T:System.Data.DataSet"/> from a <see cref="T:System.Data.Common.DbCommand"/> in  a transaction.</para>
            </summary>
            <param name="command">
            <para>The command to execute to fill the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to fill.</para>
            </param>
            <param name="tableNames">
            <para>An array of table name mappings for the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command in.</para>
            </param>
        </member>
        <member name="M:WEF.Db.Database.LoadDataSet(System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            <para>Loads a <see cref="T:System.Data.DataSet"/> from command text.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to fill.</para>
            </param>
            <param name="tableNames">
            <para>An array of table name mappings for the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
        </member>
        <member name="M:WEF.Db.Database.GetMap(System.String)">
            <summary>
            获取表结构
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.Database.ExecuteDataSet(System.String)">
            <summary>
            执行sql 获取DataSet
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.Database.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            <para>Executes the <paramref name="command"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="command"><para>The <see cref="T:System.Data.Common.DbCommand"/> to execute.</para></param>
            <returns>A <see cref="T:System.Data.DataSet"/> with the results of the <paramref name="command"/>.</returns>        
        </member>
        <member name="M:WEF.Db.Database.ExecuteDataSet(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> as part of the <paramref name="transaction" /> and returns the results in a new <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="command"><para>The <see cref="T:System.Data.Common.DbCommand"/> to execute.</para></param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <returns>A <see cref="T:System.Data.DataSet"/> with the results of the <paramref name="command"/>.</returns>        
        </member>
        <member name="M:WEF.Db.Database.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" /> and returns the results in a new <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>A <see cref="T:System.Data.DataSet"/> with the results of the <paramref name="commandText"/>.</para>
            </returns>
        </member>
        <member name="M:WEF.Db.Database.ExecuteDataSet(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> as part of the given <paramref name="transaction" /> and returns the results in a new <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>A <see cref="T:System.Data.DataSet"/> with the results of the <paramref name="commandText"/>.</para>
            </returns>
        </member>
        <member name="M:WEF.Db.Database.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            <para>Executes the <paramref name="command"/> and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <returns>
            <para>The first column of the first row in the result set.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:WEF.Db.Database.ExecuteScalar(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> within a <paramref name="transaction" />, and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <returns>
            <para>The first column of the first row in the result set.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:WEF.Db.Database.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" />  and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>The first column of the first row in the result set.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:WEF.Db.Database.ExecuteScalar(System.String)">
            <summary>
            sql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.Database.ExecuteScalar(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" /> 
            within the given <paramref name="transaction" /> and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>The first column of the first row in the result set.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:WEF.Db.Database.ExecuteNonQuery(System.String)">
            <summary>
            执行sql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.Database.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            <para>Executes the <paramref name="command"/> and returns the number of rows affected.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>       
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:WEF.Db.Database.ExecuteNonQuery(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> within the given <paramref name="transaction" />, and returns the number of rows affected.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:WEF.Db.Database.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" /> and returns the number of rows affected.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>The number of rows affected.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:WEF.Db.Database.ExecuteNonQuery(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" /> as part of the given <paramref name="transaction" /> and returns the number of rows affected.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>The number of rows affected</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:WEF.Db.Database.ExecuteReader(System.String)">
            <summary>
            sql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.Database.ExecuteReader(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> within a transaction and returns an <see cref="T:System.Data.IDataReader"></see> through which the result can be read.
            It is the responsibility of the caller to close the connection and reader when finished.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <returns>
            <para>An <see cref="T:System.Data.IDataReader"/> object.</para>
            </returns>        
        </member>
        <member name="M:WEF.Db.Database.BeginTransaction">
            <summary>
            Begins the transaction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.Database.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="il">The il.</param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.Database.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The command to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>
            <param name="size"><para>The maximum size of the data within the column.</para></param>
            <param name="direction"><para>One of the <see cref="T:System.Data.ParameterDirection"/> values.</para></param>
            <param name="nullable"><para>Avalue indicating whether the parameter accepts <see langword="null"/> (<b>Nothing</b> in Visual Basic) values.</para></param>
            <param name="precision"><para>The maximum number of digits used to represent the <paramref name="value"/>.</para></param>
            <param name="scale"><para>The number of decimal places to which <paramref name="value"/> is resolved.</para></param>
            <param name="sourceColumn"><para>The name of the source column mapped to the DataSet and used for loading or returning the <paramref name="value"/>.</para></param>
            <param name="sourceVersion"><para>One of the <see cref="T:System.Data.DataRowVersion"/> values.</para></param>
            <param name="value"><para>The value of the parameter.</para></param>       
        </member>
        <member name="M:WEF.Db.Database.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            <para>Adds a new instance of a <see cref="T:System.Data.Common.DbParameter"/> object to the command.</para>
            </summary>
            <param name="command">The command to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>        
            <param name="direction"><para>One of the <see cref="T:System.Data.ParameterDirection"/> values.</para></param>                
            <param name="sourceColumn"><para>The name of the source column mapped to the DataSet and used for loading or returning the <paramref name="value"/>.</para></param>
            <param name="sourceVersion"><para>One of the <see cref="T:System.Data.DataRowVersion"/> values.</para></param>
            <param name="value"><para>The value of the parameter.</para></param>    
        </member>
        <member name="M:WEF.Db.Database.AddOutParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32)">
            <summary>
            Adds a new Out <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The command to add the out parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>        
            <param name="size"><para>The maximum size of the data within the column.</para></param>        
        </member>
        <member name="M:WEF.Db.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The command to add the in parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>                
            <remarks>
            <para>This version of the method is used when you can have the same parameter object multiple times with different values.</para>
            </remarks>        
        </member>
        <member name="M:WEF.Db.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Object)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The commmand to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>                
            <param name="value"><para>The value of the parameter.</para></param>      
        </member>
        <member name="M:WEF.Db.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The commmand to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>       
            <param name="size">size</param>
            <param name="value"><para>The value of the parameter.</para></param>      
        </member>
        <member name="M:WEF.Db.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Object)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The commmand to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="value"><para>The value of the parameter.</para></param>      
        </member>
        <member name="M:WEF.Db.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.String,System.Data.DataRowVersion)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The command to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>                
            <param name="sourceColumn"><para>The name of the source column mapped to the DataSet and used for loading or returning the value.</para></param>
            <param name="sourceVersion"><para>One of the <see cref="T:System.Data.DataRowVersion"/> values.</para></param>
        </member>
        <member name="M:WEF.Db.Database.AddInputOutputParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a new In and Out
            </summary>
        </member>
        <member name="M:WEF.Db.Database.AddReturnValueParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32)">
            <summary>
            Adds a new return
            </summary>
        </member>
        <member name="M:WEF.Db.Database.AddParameter(System.Data.Common.DbCommand,System.Data.Common.DbParameter[])">
            <summary>
            Adds parameters
            </summary>
        </member>
        <member name="M:WEF.Db.Database.AddCommandParameter(System.Data.Common.DbCommand,WEF.Expressions.Parameter[])">
            <summary>
            给命令添加参数  where paramters
            </summary>
            <param name="command"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="P:WEF.Db.Database.IsBatchConnection">
            <summary>
            Gets a value indicating whether this instance is batch connection.
            </summary>
            <value>
            	<c>true</c> if this instance is batch connection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:WEF.Db.Database.BeginBatchConnection">
            <summary>
            Begins the batch connection.   the default size of the batch is 10.
            </summary>
        </member>
        <member name="M:WEF.Db.Database.BeginBatchConnection(System.Int32)">
            <summary>
            Begins the batch connection.
            </summary>
            <param name="batchSize">Size of the batch.</param>
        </member>
        <member name="M:WEF.Db.Database.BeginBatchConnection(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            Begins the batch connection.
            </summary>
            <param name="batchSize">Size of the batch.</param>
            <param name="tran">The tran.</param>
        </member>
        <member name="M:WEF.Db.Database.BeginBatchConnection(System.Int32,System.Data.IsolationLevel)">
            <summary>
            Begins the batch connection.
            </summary>
            <param name="batchSize">Size of the batch.</param>
            <param name="il">The il.</param>
        </member>
        <member name="M:WEF.Db.Database.EndBatchConnection">
            <summary>
            Ends the batch connection.
            </summary>
        </member>
        <member name="M:WEF.Db.Database.ExecutePendingBatchOperations">
            <summary>
            Executes the pending batch operations.
            </summary>
        </member>
        <member name="T:WEF.Db.DbBatch">
            <summary>
            批处理(事务)
            </summary>
            <summary>
            批处理
            </summary>
        </member>
        <member name="F:WEF.Db.DbBatch.cmdCreator">
            <summary>
            DbCommand生成器
            </summary>
        </member>
        <member name="F:WEF.Db.DbBatch.batchcmd">
            <summary>
            批处理
            </summary>
        </member>
        <member name="F:WEF.Db.DbBatch.isClose">
            <summary>
            是否已关闭
            </summary>
        </member>
        <member name="M:WEF.Db.DbBatch.#ctor(WEF.Db.CommandCreator,WEF.Db.BatchCommander)">
            <summary>
            构造函数
            </summary>
            <param name="batchcmd"></param>
            <param name="cmdCreator"></param>
        </member>
        <member name="M:WEF.Db.DbBatch.Execute">
            <summary>
            立即执行已挂起的批处理
            </summary>
        </member>
        <member name="M:WEF.Db.DbBatch.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:WEF.Db.DbBatch.Dispose">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:WEF.Db.DbBatch.UpdateAll``1(``0[])">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.Db.DbBatch.UpdateAll``1(``0)">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:WEF.Db.DbBatch.UpdateAll``1(``0,WEF.Expressions.WhereClip)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbBatch.Update``1(``0[])">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.Db.DbBatch.Update``1(``0)">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:WEF.Db.DbBatch.Update``1(``0,WEF.Expressions.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbBatch.Update``1(WEF.Common.Field,System.Object,WEF.Expressions.WhereClip)">
            <summary>
            更新单个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbBatch.Update``1(System.Collections.Generic.Dictionary{WEF.Common.Field,System.Object},WEF.Expressions.WhereClip)">
            <summary>
            更新多个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbBatch.Update``1(WEF.Common.Field[],System.Object[],WEF.Expressions.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbBatch.Delete``1(``0)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbBatch.Delete``1(System.String[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbBatch.Delete``1(System.Int32[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbBatch.Delete``1(System.Int64[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbBatch.Delete``1(System.Guid[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbBatch.Delete``1(WEF.Expressions.WhereClip)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbBatch.Insert``1(``0[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbBatch.Insert``1(``0)">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbBatch.Insert``1(WEF.Common.Field[],System.Object[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Db.DbTrans">
            <summary>
            事务
            </summary>
        </member>
        <member name="F:WEF.Db.DbTrans.trans">
            <summary>
            事务
            </summary>
        </member>
        <member name="F:WEF.Db.DbTrans.conn">
            <summary>
            连接
            </summary>
        </member>
        <member name="F:WEF.Db.DbTrans.dbSession">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Db.DbTrans.isCommitOrRollback">
            <summary>
            判断是否有提交或回滚
            </summary>
        </member>
        <member name="F:WEF.Db.DbTrans.isClose">
            <summary>
            是否关闭
            </summary>
        </member>
        <member name="M:WEF.Db.DbTrans.#ctor(System.Data.Common.DbTransaction,WEF.DBContext)">
            <summary>
            构造函数
            </summary>
            <param name="trans"></param>
            <param name="dbSession"></param>
        </member>
        <member name="P:WEF.Db.DbTrans.Connection">
            <summary>
            连接
            </summary>
        </member>
        <member name="P:WEF.Db.DbTrans.IsolationLevel">
            <summary>
            事务级别
            </summary>
        </member>
        <member name="M:WEF.Db.DbTrans.Commit">
            <summary>
            提交
            </summary>
        </member>
        <member name="M:WEF.Db.DbTrans.Rollback">
            <summary>
            回滚
            </summary>
        </member>
        <member name="M:WEF.Db.DbTrans.op_Implicit(WEF.Db.DbTrans)~System.Data.Common.DbTransaction">
            <summary>
            隐式转换
            </summary>
            <param name="dbTrans"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:WEF.Db.DbTrans.Dispose">
            <summary>
            关闭连接并释放资源
            </summary>
        </member>
        <member name="M:WEF.Db.DbTrans.FromSql(System.String)">
            <summary>
            FromSql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.FromPro(System.String)">
            <summary>
            FromPro
            </summary>
            <param name="proName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.From``1">
            <summary>
            查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.From``1(System.String)">
            <summary>
            查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.From(System.String)">
            <summary>
            查询
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.UpdateAll``1(``0[])">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.Db.DbTrans.UpdateAll``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.Db.DbTrans.UpdateAll``1(``0)">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:WEF.Db.DbTrans.UpdateAll``1(``0,WEF.Expressions.WhereClip)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.UpdateAll``1(``0,WEF.Expressions.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(``0[])">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(``0)">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(``0,WEF.Expressions.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(``0,WEF.Expressions.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(WEF.Common.Field,System.Object,WEF.Expressions.WhereClip)">
            <summary>
            更新单个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(WEF.Common.Field,System.Object,WEF.Expressions.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(WEF.Common.Field,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(System.Collections.Generic.Dictionary{WEF.Common.Field,System.Object},WEF.Expressions.WhereClip)">
            <summary>
            更新多个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(System.Collections.Generic.Dictionary{WEF.Common.Field,System.Object},WEF.Expressions.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(System.Collections.Generic.Dictionary{WEF.Common.Field,System.Object},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(WEF.Common.Field[],System.Object[],WEF.Expressions.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(WEF.Common.Field[],System.Object[],WEF.Expressions.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Update``1(WEF.Common.Field[],System.Object[],System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Delete``1(``0)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Delete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.Db.DbTrans.Delete``1(System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.Db.DbTrans.Delete``1(System.String[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Delete``1(WEF.Expressions.WhereClip)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Delete``1(WEF.Expressions.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Insert``1(``0[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Insert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.Db.DbTrans.Insert``1(System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.Db.DbTrans.Insert``1(``0)">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Db.DbTrans.Insert``1(WEF.Common.Field[],System.Object[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.DBContext">
            <summary>
            数据操作上下文
            </summary>
        </member>
        <member name="F:WEF.DBContext.db">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.DBContext.cmdCreator">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.TurnOnCache">
            <summary>
            开启缓存
            </summary>
        </member>
        <member name="M:WEF.DBContext.TurnOffCache">
            <summary>
            关闭缓存
            </summary>
        </member>
        <member name="M:WEF.DBContext.BeginBatchConnection">
            <summary>
            开始批处理，默认10条sql组合
            </summary>
        </member>
        <member name="M:WEF.DBContext.BeginBatchConnection(System.Int32)">
            <summary>
            开始批处理
            </summary>
            <param name="batchSize">sql组合条数</param>
        </member>
        <member name="M:WEF.DBContext.BeginBatchConnection(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            开始批处理
            </summary>
            <param name="batchSize">sql组合条数</param>
            <param name="tran">事务</param>
        </member>
        <member name="M:WEF.DBContext.BeginBatchConnection(System.Int32,System.Data.IsolationLevel)">
            <summary>
            开始批处理
            </summary>
            <param name="batchSize">sql组合条数</param>
            <param name="il">事务</param>
        </member>
        <member name="F:WEF.DBContext.Default">
            <summary>
            Get the default gateway, which mapping to the default Database.
            </summary>
        </member>
        <member name="M:WEF.DBContext.SetDefault(WEF.DatabaseType,System.String)">
            <summary>
            Sets the default DbSession.
            </summary>
            <param name="dt">The dt.</param>
            <param name="connStr">The conn STR.</param>
        </member>
        <member name="M:WEF.DBContext.CreateDbProvider(WEF.DatabaseType,System.String)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="dt">The dt.</param>
            <param name="connStr">The conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="M:WEF.DBContext.SetDefault(System.String,System.String,System.String)">
            <summary>
            Sets the default DbSession.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="className">Name of the class.</param>
            <param name="connStr">The conn STR.</param>
        </member>
        <member name="M:WEF.DBContext.SetDefault(System.String)">
            <summary>
            Sets the default DbSession.
            </summary>
            <param name="connStrName">Name of the conn STR.</param>
        </member>
        <member name="M:WEF.DBContext.#ctor">
            <summary>
            构造函数    使用默认  DbSession.Default
            </summary>
        </member>
        <member name="M:WEF.DBContext.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="connStrName">config文件中connectionStrings节点的name</param>
        </member>
        <member name="M:WEF.DBContext.#ctor(WEF.Db.Database)">
            <summary>
            构造函数
            </summary>
            <param name="db">已知的Database</param>
        </member>
        <member name="M:WEF.DBContext.#ctor(WEF.DatabaseType,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="dt">数据库类别</param>
            <param name="connStr">连接字符串</param>
        </member>
        <member name="M:WEF.DBContext.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="assemblyName">程序集</param>
            <param name="className">类名</param>
            <param name="connStr">连接字符串</param>
        </member>
        <member name="M:WEF.DBContext.Search``1(System.String)">
            <summary>
            查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Search``1(``0)">
            <summary>
            查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Search(System.String)">
            <summary>
            查询
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Sum``1(WEF.Common.Field,WEF.Expressions.WhereClip)">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Sum``1(WEF.Common.Field,WEF.Expressions.Where)">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Sum``1(WEF.Common.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Max``1(WEF.Common.Field,WEF.Expressions.WhereClip)">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Max``1(WEF.Common.Field,WEF.Expressions.Where)">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Max``1(WEF.Common.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Min``1(WEF.Common.Field,WEF.Expressions.WhereClip)">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Min``1(WEF.Common.Field,WEF.Expressions.Where)">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Min``1(WEF.Common.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Avg``1(WEF.Common.Field,WEF.Expressions.WhereClip)">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Avg``1(WEF.Common.Field,WEF.Expressions.Where)">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Avg``1(WEF.Common.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Sum``2(WEF.Common.Field,WEF.Expressions.WhereClip)">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Sum``2(WEF.Common.Field,WEF.Expressions.Where)">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Sum``2(WEF.Common.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Max``2(WEF.Common.Field,WEF.Expressions.WhereClip)">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Max``2(WEF.Common.Field,WEF.Expressions.Where)">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Max``2(WEF.Common.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Min``2(WEF.Common.Field,WEF.Expressions.WhereClip)">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Min``2(WEF.Common.Field,WEF.Expressions.Where)">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Min``2(WEF.Common.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Avg``2(WEF.Common.Field,WEF.Expressions.WhereClip)">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Avg``2(WEF.Common.Field,WEF.Expressions.Where)">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Avg``2(WEF.Common.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Exists``1(WEF.Expressions.WhereClip)">
            <summary>
            判断是否存在记录
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Exists``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            判断是否存在记录
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Exists``1(WEF.Expressions.Where)">
            <summary>
            判断是否存在记录
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Count``1(WEF.Common.Field,WEF.Expressions.WhereClip)">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Count``1(WEF.Common.Field,WEF.Expressions.Where)">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Count``1(WEF.Common.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Count``1(WEF.Expressions.WhereClip)">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Count``1(WEF.Expressions.Where)">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.RegisterSqlLogger(WEF.Common.LogHandler)">
            <summary>
            Registers the SQL logger.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:WEF.DBContext.UnregisterSqlLogger(WEF.Common.LogHandler)">
            <summary>
            Unregisters the SQL logger.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="P:WEF.DBContext.Db">
            <summary>
            Gets the db.
            </summary>
            <value>The db.</value>
        </member>
        <member name="M:WEF.DBContext.BeginTransaction">
            <summary>
            Begins the transaction.
            </summary>
            <returns>The begined transaction.</returns>
        </member>
        <member name="M:WEF.DBContext.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="il">The il.</param>
            <returns>The begined transaction.</returns>
        </member>
        <member name="M:WEF.DBContext.CloseTransaction(System.Data.Common.DbTransaction)">
            <summary>
            Closes the transaction.
            </summary>
            <param name="tran">The tran.</param>
        </member>
        <member name="M:WEF.DBContext.BuildDbParamName(System.String)">
            <summary>
            Builds the name of the db param.
            </summary>
            <param name="name">The name.</param>
            <returns>The name of the db param</returns>
        </member>
        <member name="M:WEF.DBContext.UpdateAll``1(``0)">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:WEF.DBContext.UpdateAll``1(``0[])">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.DBContext.UpdateAll``1(System.Data.Common.DbTransaction,``0[])">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.DBContext.UpdateAll``1(``0,WEF.Expressions.WhereClip)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.UpdateAll``1(System.Data.Common.DbTransaction,``0)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entity"></param>
        </member>
        <member name="M:WEF.DBContext.UpdateAll``1(System.Data.Common.DbTransaction,``0,WEF.Expressions.WhereClip)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="where"></param>
            <param name="entity"></param>
        </member>
        <member name="M:WEF.DBContext.UpdateAll``1(System.Data.Common.DbTransaction,``0,WEF.Expressions.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Update``1(``0)">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:WEF.DBContext.Update``1(``0[])">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Collections.Generic.List{``0})">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.DBContext.Update``1(``0,WEF.Expressions.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Update``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(``0,WEF.Expressions.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,``0)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entity"></param>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,``0[])">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,System.Collections.Generic.List{``0})">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,``0,WEF.Expressions.WhereClip)">
            <summary>
            更新
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,``0,WEF.Expressions.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(WEF.Common.Field,System.Object,WEF.Expressions.WhereClip)">
            <summary>
            更新单个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Update``1(WEF.Common.Field,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(WEF.Common.Field,System.Object,WEF.Expressions.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,WEF.Common.Field,System.Object,WEF.Expressions.WhereClip)">
            <summary>
            更新单个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,WEF.Common.Field,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,WEF.Common.Field,System.Object,WEF.Expressions.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Collections.Generic.Dictionary{WEF.Common.Field,System.Object},WEF.Expressions.WhereClip)">
            <summary>
            更新多个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Collections.Generic.Dictionary{WEF.Common.Field,System.Object},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Collections.Generic.Dictionary{WEF.Common.Field,System.Object},WEF.Expressions.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,System.Collections.Generic.Dictionary{WEF.Common.Field,System.Object},WEF.Expressions.WhereClip)">
            <summary>
            更新多个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,System.Collections.Generic.Dictionary{WEF.Common.Field,System.Object},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,System.Collections.Generic.Dictionary{WEF.Common.Field,System.Object},WEF.Expressions.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(WEF.Common.Field[],System.Object[],WEF.Expressions.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Update``1(WEF.Common.Field[],System.Object[],System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(WEF.Common.Field[],System.Object[],WEF.Expressions.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,WEF.Common.Field[],System.Object[],WEF.Expressions.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,WEF.Common.Field[],System.Object[],System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Update``1(System.Data.Common.DbTransaction,WEF.Common.Field[],System.Object[],WEF.Expressions.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.Delete``1(``0)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Data.Common.DbTransaction,``0)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Data.Common.DbTransaction,``0[])">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Data.Common.DbTransaction,System.Collections.Generic.List{``0})">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Data.Common.DbTransaction,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Int32[])">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Guid[])">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Int64[])">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.String[])">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.DBContext.DeleteByPrimaryKey``1(System.Array)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Data.Common.DbTransaction,System.Int32[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Data.Common.DbTransaction,System.Int64[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Data.Common.DbTransaction,System.Guid[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Data.Common.DbTransaction,System.String[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.DeleteByPrimaryKey``1(System.Data.Common.DbTransaction,System.Array[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Data.Common.DbTransaction,WEF.Expressions.WhereClip)">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Data.Common.DbTransaction,WEF.Expressions.Where)">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:WEF.DBContext.Delete``1(System.Data.Common.DbTransaction,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:WEF.DBContext.Delete``1(WEF.Expressions.WhereClip)">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:WEF.DBContext.Delete``1(WEF.Expressions.Where)">
            <summary>
            删除
            </summary>
        </member>
        <member name="M:WEF.DBContext.DeleteAll``1">
            <summary>
            删除整表数据
            </summary>
        </member>
        <member name="M:WEF.DBContext.Insert``1(``0[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Insert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Insert``1(System.Collections.Generic.List{``0})">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Insert``1(``0)">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Insert``1(System.Data.Common.DbTransaction,``0)">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Insert``1(System.Data.Common.DbTransaction,``0[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Insert``1(System.Data.Common.DbTransaction,System.Collections.Generic.List{``0})">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Insert``1(System.Data.Common.DbTransaction,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Insert``1(WEF.Common.Field[],System.Object[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Insert``1(System.Data.Common.DbTransaction,WEF.Common.Field[],System.Object[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.insertExecute``1(System.Data.Common.DbCommand)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.insertExecute``1(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.Save``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将实体批量提交至数据库，内置事务。每个实体需要手动标记EntityState状态。
            </summary>
        </member>
        <member name="M:WEF.DBContext.Save``1(``0)">
             <summary>
            保存实体。需要手动标记EntityState状态。
             </summary>
        </member>
        <member name="M:WEF.DBContext.Save``1(System.Data.Common.DbTransaction,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将实体批量提交至数据库。每个实体需要手动标记EntityState状态。
            </summary>
        </member>
        <member name="M:WEF.DBContext.Save``1(System.Data.Common.DbTransaction,``0)">
             <summary>
            保存实体。需要手动标记EntityState状态。
             </summary>
        </member>
        <member name="M:WEF.DBContext.ExecuteNonQuery(System.String)">
            <summary>
            执行ExecuteNonQuery
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            执行ExecuteNonQuery
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.ExecuteNonQuery(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            执行ExecuteNonQuery
            </summary>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.ExecuteScalar(System.String)">
            <summary>
            执行ExecuteScalar
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.ExecuteScalar(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            执行ExecuteScalar
            </summary>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            执行ExecuteScalar
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.ExecuteReader(System.String)">
            <summary>
            执行ExecuteReader
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            执行ExecuteReader
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.ExecuteReader(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            执行ExecuteReader
            </summary>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.ExecuteDataTable(System.String)">
            <summary>
            执行ExecuteDataTable
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.ExecuteDataSet(System.String)">
            <summary>
            执行ExecuteDataSet
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            执行ExecuteDataSet
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.ExecuteDataSet(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            执行ExecuteDataSet
            </summary>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="P:WEF.DBContext.LeftToken">
            <summary>
            左边  
            <example>例如:sqlserver   的    [</example>
            </summary>
        </member>
        <member name="P:WEF.DBContext.RightToken">
            <summary>
            右边
            <example>例如:sqlserver   的    ]</example>
            </summary>
        </member>
        <member name="P:WEF.DBContext.ParamPrefix">
            <summary>
            参数前缀
            <example>例如:sqlserver 的     @</example>
            </summary>
        </member>
        <member name="M:WEF.DBContext.FromProc(System.String)">
            <summary>
            存储过程查询
            </summary>
            <param name="procName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.FromSql(System.String)">
            <summary>
            sql查询
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.GetColumnInfos(System.String)">
            <summary>
            获取表中字段信息
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.GetColumnInfo(System.String,System.String)">
            <summary>
            获取表中字段信息
            </summary>
            <param name="tableName"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.DBContext.GetTypeAndLength(System.String,System.String)">
            <summary>
            获取表中字段类型及长度
            </summary>
            <param name="tableName"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.DBContext.EnumOperation">
            <summary>
            列举操作方法
            </summary>
        </member>
        <member name="M:WEF.DBContext.UpdateModel(System.Nullable{System.Int32},System.String,System.Collections.Specialized.NameValueCollection,WEF.DBContext.EnumOperation)">
            <summary>
            MVC前端传值更新模型
            </summary>
            <param name="id">更新时的主键值</param>
            <param name="tableName">表名</param>
            <param name="collection">form表单</param>
            <param name="operation">更新类型</param>
            <returns>更新的记录数</returns>
        </member>
        <member name="T:WEF.Entity">
            <summary>
            实体信息
            </summary>
        </member>
        <member name="F:WEF.Entity._tableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:WEF.Entity._userName">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Entity._tableAsName">
            <summary>
            别名
            </summary>
        </member>
        <member name="F:WEF.Entity._isAttached">
            <summary>
            是否
            </summary>
        </member>
        <member name="F:WEF.Entity._entityState">
            <summary>
            实体状态
            </summary>
        </member>
        <member name="F:WEF.Entity.All">
            <summary>
            select *。用于Lambda写法实现 select * 。注：表中不得含有字段名为All。
            </summary>
        </member>
        <member name="F:WEF.Entity._modifyFields">
            <summary>
            修改的字段集合
            </summary>
        </member>
        <member name="F:WEF.Entity._modifyFieldsStr">
            <summary>
            修改的字段集合 v1.10.5.6及以上版本可使用。
            </summary>
        </member>
        <member name="M:WEF.Entity.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:WEF.Entity.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="tableName">表名</param>
        </member>
        <member name="M:WEF.Entity.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="tableName">表名</param>
            <param name="userName"></param>
        </member>
        <member name="M:WEF.Entity.Attach">
            <summary>
            将实体置为修改状态
            </summary>
        </member>
        <member name="M:WEF.Entity.AttachAll">
            <summary>
            将实体所有字段置为修改状态
            </summary>
        </member>
        <member name="M:WEF.Entity.AttachAll(System.Boolean)">
            <summary>
            将实体所有字段置为修改状态
            </summary>
            <param name="ignoreNullOrEmpty">忽略null值字段与空字符串字段</param>
        </member>
        <member name="M:WEF.Entity.Attach(WEF.Common.EntityState)">
            <summary>
            将实体置为指定状态（仅对.Save()有效果）
            </summary>
        </member>
        <member name="M:WEF.Entity.GetEntityState">
            <summary>
            获取实体状态
            </summary>
        </member>
        <member name="M:WEF.Entity.DeAttach">
            <summary>
            1、恢复实体为默认状态。
            2、标记实体为不做任何数据库操作（仅对.Save()有效果）
            </summary>
        </member>
        <member name="M:WEF.Entity.OnPropertyValueChange(System.String)">
            <summary>
            
            </summary>
            <param name="f"></param>
        </member>
        <member name="M:WEF.Entity.OnPropertyValueChange(WEF.Common.Field,System.Object,System.Object)">
            <summary>
            记录字段修改
            </summary>
            <param name="field"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:WEF.Entity.ClearModifyFields">
            <summary>
            清除修改记录
            </summary>
        </member>
        <member name="M:WEF.Entity.GetFields">
            <summary>
            GetFields
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Entity.GetValues">
            <summary>
            GetValues
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Entity.GetPrimaryKeyFields">
            <summary>
            GetPrimaryKeyFields
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Entity.GetIdentityField">
            <summary>
            标识列
            </summary>
        </member>
        <member name="M:WEF.Entity.GetSequence">
            <summary>
            标识列的名称（例如如Oracle中Sequence名称）
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Entity.IsModify">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Entity.GetModifyFields">
            <summary>
            返回修改记录。v.10.5.5以上版本请不要使用此方法。
            </summary>
        </member>
        <member name="M:WEF.Entity.GetModifyFieldsStr">
            <summary>
            返回修改记录。v.10.5.5及以下版本请不要使用此方法。
            </summary>
        </member>
        <member name="M:WEF.Entity.IsReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="M:WEF.Entity.GetTableName">
            <summary>
            获取表名
            </summary>
        </member>
        <member name="M:WEF.Entity.GetUserName">
            <summary>
            获取表名
            </summary>
        </member>
        <member name="M:WEF.Entity.GetTableAsName">
            <summary>
            获取表名别名
            </summary>
        </member>
        <member name="F:WEF.Expressions.WhereType.JoinWhere">
            <summary>
            join where
            </summary>
        </member>
        <member name="F:WEF.Expressions.WhereType.Where">
            <summary>
            常规Where
            </summary>
        </member>
        <member name="T:WEF.Expressions.QueryOperator">
            <summary>
            比较类型
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.Equal">
            <summary>
            ==
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.NotEqual">
            <summary>
            &lt;&gt; 、 !=、不等于
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.Greater">
            <summary>
            >
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.Less">
            <summary>
            &lt; 小于
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.GreaterOrEqual">
            <summary>
            >=
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.LessOrEqual">
            <summary>
            &lt;= 小于等于
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.Like">
            <summary>
            LIKE
            </summary>
        </member>
        <!-- 对于成员“F:WEF.Expressions.QueryOperator.BitwiseAND”忽略有格式错误的 XML 注释 -->
        <member name="F:WEF.Expressions.QueryOperator.BitwiseOR">
            <summary>
            |
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.BitwiseXOR">
            <summary>
            ^
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.BitwiseNOT">
            <summary>
            ~
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.IsNULL">
            <summary>
            IS NULL
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.IsNotNULL">
            <summary>
            IS NOT NULL
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.Add">
            <summary>
             +
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.Subtract">
            <summary>
            -
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.Multiply">
            <summary>
            *
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.Divide">
            <summary>
            /
            </summary>
        </member>
        <member name="F:WEF.Expressions.QueryOperator.Modulo">
            <summary>
            %
            </summary>
        </member>
        <member name="T:WEF.Expressions.Parameter">
            <summary>
            参数
            </summary>
        </member>
        <member name="M:WEF.Expressions.Parameter.#ctor(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="parameterName"></param>
            <param name="parameterValue"></param>
        </member>
        <member name="M:WEF.Expressions.Parameter.#ctor(System.String,System.Object,System.Nullable{System.Data.DbType},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="parameterName"></param>
            <param name="parameterValue"></param>
            <param name="parameterDbType"></param>
            <param name="parameterSize"></param>
        </member>
        <member name="P:WEF.Expressions.Parameter.ParameterName">
            <summary>
            参数名称
            </summary>
        </member>
        <member name="P:WEF.Expressions.Parameter.ParameterValue">
            <summary>
            参数值
            </summary>
        </member>
        <member name="P:WEF.Expressions.Parameter.ParameterDbType">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:WEF.Expressions.Parameter.ParameterSize">
            <summary>
            长度
            </summary>
        </member>
        <member name="T:WEF.Expressions.Expression">
            <summary>
            表达式
            </summary>
        </member>
        <member name="F:WEF.Expressions.Expression.expressionString">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Expressions.Expression.parameters">
            <summary>
            参数
            </summary>
        </member>
        <member name="M:WEF.Expressions.Expression.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:WEF.Expressions.Expression.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="expressionString"></param>
        </member>
        <member name="M:WEF.Expressions.Expression.#ctor(System.String,WEF.Expressions.Parameter[])">
            <summary>
            构造函数
            </summary>
            <param name="expressionString"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:WEF.Expressions.Expression.#ctor(WEF.Common.Field,System.Object,WEF.Expressions.QueryOperator)">
            <summary>
            构造函数
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <param name="oper"></param>
        </member>
        <member name="M:WEF.Expressions.Expression.#ctor(WEF.Common.Field,System.Object,WEF.Expressions.QueryOperator,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <param name="oper"></param>
            <param name="isFieldBefore"></param>
        </member>
        <member name="P:WEF.Expressions.Expression.Parameters">
            <summary>
            返回参数
            </summary>
        </member>
        <member name="M:WEF.Expressions.Expression.ToString">
            <summary>
            返回组合字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionComparer.CompareNull``1(``0,``0,System.Int32@)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x"></param>
            <param name="y"></param>
            <param name="result"></param>
            <returns>can stop comparing or not</returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToJoinWhere``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToWhereClip(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToWhereClip``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToWhereClip``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToWhereClip``3(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToWhereClip``4(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToWhereClip``5(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,``4,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToWhereClipChild(System.Linq.Expressions.Expression,WEF.Expressions.WhereType)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="wt"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.IsBoolFieldOrProperty(System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ConvertUnary(System.Linq.Expressions.UnaryExpression,WEF.Expressions.WhereType)">
            <summary>
            
            </summary>
            <param name="ue"></param>
            <param name="wtype"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ConvertBinary(System.Linq.Expressions.BinaryExpression,WEF.Expressions.WhereType)">
            <summary>
            
            </summary>
            <param name="be"></param>
            <param name="wt"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ConvertMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            
            </summary>
            <param name="mce"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ConvertNull(System.Linq.Expressions.MethodCallExpression,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mce"></param>
            <param name="isNull"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ConvertEqualsCall(System.Linq.Expressions.MethodCallExpression,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mce"></param>
            <param name="isLike"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ConvertInCall(System.Linq.Expressions.MethodCallExpression,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mce"></param>
            <param name="notIn"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ConvertLikeCall(System.Linq.Expressions.MethodCallExpression,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mce"></param>
            <param name="left"></param>
            <param name="right"></param>
            <param name="isLike"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.GetMemberName(System.Linq.Expressions.Expression,WEF.Common.ColumnFunction@,System.Linq.Expressions.MemberExpression@)">
            <summary>
            
            </summary>
            <param name="expr"></param>
            <param name="function"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.LeftAndRight(System.Linq.Expressions.BinaryExpression,WEF.Expressions.QueryOperator,WEF.Expressions.WhereType)">
            <summary>
            
            </summary>
            <param name="be"></param>
            <param name="co"></param>
            <param name="wtype"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.GetValue(System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToGroupByClip(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToGroupByClipChild(System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="exprBody"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToOrderByClip(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToOrderByDescendingClip(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToOrderByClipChild(System.Linq.Expressions.Expression,WEF.Expressions.OrderByOperater)">
            <summary>
            
            </summary>
            <param name="exprBody"></param>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToSelect(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToSelect``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToSelect``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToSelect``3(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToSelect``4(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToSelect``5(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,``4,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToSelect(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ToSelectChild(System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="exprBody"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ConvertFun(System.Linq.Expressions.MethodCallExpression,System.String)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.ConvertAs(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.GetTableName(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.GetFieldName(System.Reflection.MemberInfo)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.CreateField(System.Reflection.MemberInfo,System.Type)">
            <summary>
            
            </summary>
            <param name="mi"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.CreateField(System.String[],System.Type)">
            <summary>
            
            </summary>
            <param name="filedProp"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.ExpressionToClip`1.CreateField(System.String[],System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="filedProp"></param>
            <param name="t"></param>
            <param name="asName"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Expressions.GroupByClip">
            <summary>
            分组
            </summary>
        </member>
        <member name="M:WEF.Expressions.GroupByClip.IsNullOrEmpty(WEF.Expressions.GroupByClip)">
            <summary>
            判断 GroupByClip  是否为null
            </summary>
            <param name="groupByClip"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.GroupByClip.op_BitwiseAnd(WEF.Expressions.GroupByClip,WEF.Expressions.GroupByClip)">
            <summary>
            两个GroupByClip相加
            </summary>
            <param name="leftGroupByClip"></param>
            <param name="rightGroupByClip"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.GroupByClip.RemovePrefixTableName">
            <summary>
            去掉的表前缀
            </summary>
            <returns></returns>
        </member>
        <member name="P:WEF.Expressions.GroupByClip.GroupByString">
            <summary>
            GroupByString
            <example>
            group by id
            </example>
            </summary>
        </member>
        <member name="M:WEF.Expressions.GroupByClip.op_True(WEF.Expressions.GroupByClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.GroupByClip.op_False(WEF.Expressions.GroupByClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.GroupByClip.Equals(WEF.Expressions.GroupByClip)">
            <summary>
            比较
            </summary>
            <param name="groupByClip"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Expressions.OrderByOperater">
            <summary>
            排序类型
            </summary>
        </member>
        <member name="T:WEF.Expressions.OrderByClip">
            <summary>
            排序
            </summary>
        </member>
        <member name="F:WEF.Expressions.OrderByClip.None">
            <summary>
            null
            </summary>
        </member>
        <member name="M:WEF.Expressions.OrderByClip.IsNullOrEmpty(WEF.Expressions.OrderByClip)">
            <summary>
            判断 OrderByClip  是否为null
            </summary>
            <param name="orderByClip"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.OrderByClip.op_BitwiseAnd(WEF.Expressions.OrderByClip,WEF.Expressions.OrderByClip)">
            <summary>
            两个OrderByClip相加
            </summary>
            <param name="leftOrderByClip"></param>
            <param name="rightOrderByClip"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.OrderByClip.RemovePrefixTableName">
            <summary>
            去掉的表前缀
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.OrderByClip.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:WEF.Expressions.OrderByClip.ReverseOrderByClip">
            <summary>
            倒叙
            </summary>
        </member>
        <member name="M:WEF.Expressions.OrderByClip.Equals(WEF.Expressions.OrderByClip)">
            <summary>
            比较
            </summary>
            <param name="orderByClip"></param>
            <returns></returns>
        </member>
        <member name="P:WEF.Expressions.OrderByClip.OrderByString">
            <summary>
            OrderByString
            <example>
            order by id desc
            </example>
            </summary>
        </member>
        <member name="T:WEF.Expressions.PartialEvaluatorBase.Nominator">
            <summary>
            Performs bottom-up analysis to determine which nodes can possibly
            be part of an evaluated sub-tree.
            </summary>
        </member>
        <member name="T:WEF.Expressions.WhereClip">
            <summary>
            条件
            </summary>
        </member>
        <member name="F:WEF.Expressions.WhereClip.All">
            <summary>
            All
            </summary>
        </member>
        <member name="M:WEF.Expressions.WhereClip.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.Expressions.WhereClip.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:WEF.Expressions.WhereClip.#ctor(System.String,WEF.Expressions.Parameter[])">
            <summary>
            
            </summary>
            <param name="customWhereString"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:WEF.Expressions.WhereClip.#ctor(WEF.Common.Field,System.Object,WEF.Expressions.QueryOperator)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <param name="oper"></param>
        </member>
        <member name="P:WEF.Expressions.WhereClip.Where">
            <summary>
            返回  where
            </summary>
        </member>
        <member name="P:WEF.Expressions.WhereClip.WhereString">
            <summary>
            WhereString    
            <example>
            where 1=1
            </example>
            </summary>
        </member>
        <member name="M:WEF.Expressions.WhereClip.op_Implicit(System.String)~WEF.Expressions.WhereClip">
            <summary>
            隐式转换
            </summary>
            <param name="whereString"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.WhereClip.Equals(WEF.Expressions.WhereClip,WEF.Expressions.WhereClip)">
            <summary>
            判断条件是否一样
            </summary>
            <param name="leftWhere"></param>
            <param name="rightWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.WhereClip.IsNullOrEmpty(WEF.Expressions.WhereClip)">
            <summary>
            判断 WhereClip  是否为null
            </summary>
            <param name="whereClip"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.WhereClip.And(WEF.Expressions.WhereClip)">
            <summary>
            And
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.WhereClip.Or(WEF.Expressions.WhereClip)">
            <summary>
            Or
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.WhereClip.op_True(WEF.Expressions.WhereClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.WhereClip.op_False(WEF.Expressions.WhereClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.WhereClip.op_BitwiseAnd(WEF.Expressions.WhereClip,WEF.Expressions.WhereClip)">
            <summary>
            And
            </summary>
            <param name="leftWhere"></param>
            <param name="rightWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.WhereClip.op_BitwiseOr(WEF.Expressions.WhereClip,WEF.Expressions.WhereClip)">
            <summary>
            Or
            </summary>
            <param name="leftWhere"></param>
            <param name="rightWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.WhereClip.op_LogicalNot(WEF.Expressions.WhereClip)">
            <summary>
            not
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Expressions.WhereClip.Exists(WEF.Search)">
            <summary>
            EXISTS
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Expressions.Where">
            <summary>
            Where条件拼接
            </summary>
        </member>
        <member name="T:WEF.Expressions.Where`1">
            <summary>
            Where条件拼接，同WhereClipBuilder
            </summary>
        </member>
        <member name="M:WEF.Expressions.Where`1.And(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            AND
            </summary>
        </member>
        <member name="M:WEF.Expressions.Where`1.And``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            AND
            </summary>
        </member>
        <member name="M:WEF.Expressions.Where`1.Or(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Or
            </summary>
        </member>
        <member name="T:WEF.Expressions.WhereClipBuilder`1">
            <summary>
            Where条件拼接，同Where类
            </summary>
        </member>
        <member name="M:WEF.Expressions.WhereClipBuilder`1.And(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            AND
            </summary>
        </member>
        <member name="M:WEF.Expressions.WhereClipBuilder`1.Or(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Or
            </summary>
        </member>
        <member name="T:WEF.Expressions.WhereClipBuilder">
            <summary>
            WhereClipBuilder
            </summary>
        </member>
        <member name="F:WEF.Expressions.WhereClipBuilder.expressionStringBuilder">
            <summary>
            条件字符串
            </summary>
        </member>
        <member name="F:WEF.Expressions.WhereClipBuilder.parameters">
            <summary>
            条件参数
            </summary>
        </member>
        <member name="M:WEF.Expressions.WhereClipBuilder.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:WEF.Expressions.WhereClipBuilder.#ctor(WEF.Expressions.WhereClip)">
            <summary>
            构造函数
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:WEF.Expressions.WhereClipBuilder.And(WEF.Expressions.WhereClip)">
            <summary>
            AND
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:WEF.Expressions.WhereClipBuilder.Or(WEF.Expressions.WhereClip)">
            <summary>
            Or
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:WEF.Expressions.WhereClipBuilder.ToWhereClip">
            <summary>
            转换成WhereClip
            </summary>
            <returns></returns>
        </member>
        <member name="T:WEF.MvcPager.Page`1">
            <summary>
            页面对象 内部封装分页用
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:WEF.MvcPager.PageLinqExtensions.ToPagedList(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            自定义DataTable分页控件
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.MvcPager.PageLinqExtensions.ToPagedList``1(System.Collections.Generic.List{``0},System.Int32,System.Int32)">
            <summary>
            自定义List分页控件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.MvcPager.PageLinqExtensions.ToPagedList``1(System.Linq.IOrderedEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            自定义IOrderedEnumerable分页控件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.MvcPager.PageLinqExtensions.ToPagedList``1(WEF.MvcPager.Page{``0})">
            <summary>
            自定义Page分页控件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.AutoHide">
            <summary>
            当总页数只有一页时是否自动隐藏
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.PageIndexOutOfRangeErrorMessage">
            <summary>
            页索引超出范围时显示的错误消息
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.InvalidPageIndexErrorMessage">
            <summary>
            页索引无效时显示的错误消息
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.PageIndexParameterName">
            <summary>
            url中页索引参数的名称
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.ShowPageIndexBox">
            <summary>
            是否显示页索引输入出选择框
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.PageIndexBoxType">
            <summary>
            页索引输入或选择框的类型
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.MaximumPageIndexItems">
            <summary>
            页索引下拉框中显示的最大页索引条数，该属性仅当PageIndexBoxType设为PageIndexBoxType.DropDownList时有效
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.ShowGoButton">
            <summary>
            是否显示跳转按钮
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.GoButtonText">
            <summary>
            跳转按钮上的文本
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.PageNumberFormatString">
            <summary>
            数字页索引格式字符串
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.CurrentPageNumberFormatString">
            <summary>
            当前页索引格式字符串
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.ContainerTagName">
            <summary>
            分页控件html容器标签名，默认为div
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.PagerItemWrapperFormatString">
            <summary>
            包容数字页、当前页及上、下、前、后分页元素的html文本格式字符串
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.NumericPagerItemWrapperFormatString">
            <summary>
            包容数字页索引分页元素的html文本格式字符串
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.CurrentPagerItemWrapperFormatString">
            <summary>
            包容当前页分页元素的html文本格式字符串
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.NavigationPagerItemWrapperFormatString">
            <summary>
            包容上页、下页、首页和尾首四个分页元素的html文本格式字符串
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.MorePagerItemWrapperFormatString">
            <summary>
            包容更多页分页元素的html文本格式字符串
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.PageIndexBoxWrapperFormatString">
            <summary>
            包容页索引输入或选择框的html文本格式字符串
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.GoToPageSectionWrapperFormatString">
            <summary>
            包容页索引框及跳转按钮所在区域的html文本框字符串
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.AlwaysShowFirstLastPageNumber">
            <summary>
            whether or not show first and last numeric page number
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.NumericPagerItemCount">
            <summary>
            显示的最大数字页索引按钮数
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.ShowPrevNext">
            <summary>
            是否显示上页和下页
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.PrevPageText">
            <summary>
            上一页文本
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.NextPageText">
            <summary>
            下一页文本
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.ShowNumericPagerItems">
            <summary>
            是否显示数字页索引按钮及更多页按钮
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.ShowFirstLast">
            <summary>
            是否显示第一页和最后一页
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.FirstPageText">
            <summary>
            第一页文本
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.LastPageText">
            <summary>
            最后一页文本
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.ShowMorePagerItems">
            <summary>
            是否显示更多页按钮
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.MorePageText">
            <summary>
            更多页按钮文本
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.Id">
            <summary>
            包含分页控件的div标签的ID
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.HorizontalAlign">
            <summary>
            水平对齐方式
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.CssClass">
            <summary>
            CSS样式类
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.ShowDisabledPagerItems">
            <summary>
            whether or not show disabled navigation buttons
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.SeparatorHtml">
            <summary>
            seperating item html
            </summary>
        </member>
        <member name="P:WEF.MvcPager.PagerOptions.UseJqueryAjax">
            <summary>
            是否使用jQuery实现Ajax分页(内部用)
            </summary>
        </member>
        <member name="T:WEF.Search`1">
            <summary>
            查询
            </summary>
            <typeparam name="T"></typeparam>    
        </member>
        <member name="M:WEF.Search`1.#ctor(WEF.Db.Database)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
        </member>
        <member name="M:WEF.Search`1.#ctor(WEF.Db.Database,System.Data.Common.DbTransaction)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
            <param name="trans"></param>
        </member>
        <member name="M:WEF.Search`1.#ctor(WEF.Db.Database,System.Data.Common.DbTransaction,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
            <param name="trans"></param>
            <param name="asName"></param>
        </member>
        <member name="M:WEF.Search`1.InnerJoin``1(WEF.Expressions.WhereClip,System.String,System.String)">
            <summary>
            Inner Join。Lambda写法：.InnerJoin&lt;Model2>((a, b) => a.ID == b.ID)
            </summary>
        </member>
        <member name="M:WEF.Search`1.InnerJoin``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}},System.String)">
            <summary>
            Inner Join。Lambda写法：.InnerJoin&lt;Model2>((a, b) => a.ID == b.ID)
            </summary>
        </member>
        <member name="M:WEF.Search`1.CrossJoin``1(WEF.Expressions.WhereClip)">
            <summary>
            Cross Join
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.RightJoin``1(WEF.Expressions.WhereClip)">
            <summary>
            Right Join
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.LeftJoin``1(WEF.Expressions.WhereClip)">
            <summary>
            Left Join。经典写法：Model1._.ID == Model2._.ID
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.LeftJoin``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            Left Join。Lambda写法：.LeftJoin&lt;Model2>((d1,d2) => d1.ID == d2.ID)
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.FullJoin``1(WEF.Expressions.WhereClip)">
            <summary>
            Full Join
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Join(System.String,System.String,WEF.Expressions.WhereClip,WEF.Common.JoinType)">
            <summary>
            连接
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <param name="joinType"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.setPrimarykeyOrderby">
            <summary>
             设置默认主键排序 
            </summary>
        </member>
        <member name="M:WEF.Search`1.Having(WEF.Expressions.WhereClip)">
            <summary>
            Having 
            </summary>
        </member>
        <member name="M:WEF.Search`1.Having(WEF.Expressions.Where)">
            <summary>
            
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Where(WEF.Expressions.WhereClip)">
            <summary>
            whereclip
            </summary>
        </member>
        <member name="M:WEF.Search`1.Where(WEF.Expressions.Where{`0})">
            <summary>
            
            </summary>
            <param name="whereParam"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Where(WEF.Expressions.Where)">
            <summary>
            
            </summary>
            <param name="whereParam"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.Search`1.Where``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Where``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Where``3(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Where``4(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.Search`1.Where``5(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,``4,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="lambdaWhere"></param>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Select``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="lambdaWhere"></param>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Select``3(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="lambdaWhere"></param>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Select``5(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,``4,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="lambdaWhere"></param>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.GroupBy(WEF.Expressions.GroupByClip)">
            <summary>
            groupby
            </summary>
        </member>
        <member name="M:WEF.Search`1.GroupBy(WEF.Common.Field[])">
            <summary>
            groupby
            </summary>
        </member>
        <member name="M:WEF.Search`1.OrderBy(WEF.Common.Field[])">
            <summary>
            
            </summary>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.OrderByDescending(WEF.Common.Field[])">
            <summary>
            
            </summary>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.OrderBy(WEF.Expressions.OrderByClip)">
            <summary>
            
            </summary>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            orderby
            </summary>
        </member>
        <member name="M:WEF.Search`1.OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="lambdaOrderBy"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.OrderBy(WEF.Expressions.OrderByClip[])">
            <summary>
            
            </summary>
            <param name="orderBys"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Select(WEF.Common.Field[])">
            <summary>
            select field
            </summary>
        </member>
        <member name="M:WEF.Search`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Select``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Select``3(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Select``4(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Select``5(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,``4,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Distinct">
            <summary>
            Distinct
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Top(System.Int32)">
            <summary>
            Top
            </summary>
            <param name="topCount"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Page(System.Int32,System.Int32)">
            <summary>
            Page
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.GetPagedList(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            获取分页
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="order"></param>
            <param name="asc"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.SetDefaultOrderby">
            <summary>
            设置默认排序
            </summary>
        </member>
        <member name="M:WEF.Search`1.From(System.Int32,System.Int32)">
            <summary>
            From  1-10
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.SetCacheTimeOut(System.Int32)">
            <summary>
            设置缓存有效期  单位：秒
            </summary>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.SetCacheDependency(System.Web.Caching.CacheDependency)">
            <summary>
            设置缓存依赖
            </summary>
            <param name="dep"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Refresh">
            <summary>
            重新加载
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.AddSelect(WEF.ISearch)">
            <summary>
            select sql
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.AddSelect(WEF.ISearch,System.String)">
            <summary>
            select sql
            </summary>
            <param name="fromSection"></param>
            <param name="aliasName">别名</param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.ToList``1">
            <summary>
            
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.ToList">
            <summary>
            To List&lt;T>
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.ToEnumerable">
            <summary>
            返回懒加载数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.ToFirstDefault">
            <summary>
            返回第一个实体  如果为null，则默认实例化一个
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.FirstDefault">
            <summary>
            返回第一个实体  如果为null，则默认实例化一个
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.First">
            <summary>
            返回第一个实体，同ToFirst()。无数据返回Null。
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.First``1">
            <summary>
            返回第一个实体，同ToFirst()。无数据返回Null。
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.ToFirst``1">
            <summary>
            返回第一个实体 ，同First()。无数据返回Null。
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.ToFirst">
            <summary>
            返回第一个实体 ，同First()。无数据返回Null。
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.Union(WEF.ISearch)">
            <summary>
            Union
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search`1.UnionAll(WEF.ISearch)">
            <summary>
            Union All
            </summary>        
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="F:WEF.WEFExtention.Tips">
            <summary>
            
            </summary>
        </member>
        <member name="M:WEF.WEFExtention.Like(System.Object,System.Object)">
            <summary>
            like '%value%' 模糊查询，同Contains。
            </summary>
        </member>
        <member name="M:WEF.WEFExtention.In``1(System.Object,``0[])">
            <summary>
            where field in (value,value,value)。传入Array或List&lt;T>。
            </summary>
        </member>
        <member name="M:WEF.WEFExtention.In``1(System.Object,System.Collections.Generic.List{``0})">
            <summary>
            where field in (value,value,value)。传入Array或List&lt;T>。
            </summary>
        </member>
        <member name="M:WEF.WEFExtention.NotIn``1(System.Object,``0[])">
            <summary>
            where field not in (value,value,value)。传入Array或List&lt;T>。
            </summary>
        </member>
        <member name="M:WEF.WEFExtention.NotIn``1(System.Object,System.Collections.Generic.List{``0})">
            <summary>
            where field not in (value,value,value)。传入Array或List&lt;T>。
            </summary>
        </member>
        <member name="M:WEF.WEFExtention.IsNull(System.Object)">
            <summary>
            IS NULL
            </summary>
        </member>
        <member name="M:WEF.WEFExtention.IsNotNull(System.Object)">
            <summary>
            IS NOT NULL
            </summary>
        </member>
        <member name="M:WEF.WEFExtention.As(System.Object,System.String)">
            <summary>
            As
            </summary>
        </member>
        <member name="M:WEF.WEFExtention.Sum(System.Object)">
            <summary>
            Sum
            </summary>
        </member>
        <member name="M:WEF.WEFExtention.Count(System.Object)">
            <summary>
            Count
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.WEFExtention.Avg(System.Object)">
            <summary>
            Avg
            </summary>
        </member>
        <member name="M:WEF.WEFExtention.Len(System.Object)">
            <summary>
            Len
            </summary>
        </member>
        <member name="M:WEF.WEFExtention.ConvertTo``2(``0)">
            <summary>
            深复制当前对象到另外的实体
            可触发source的属性修改
            </summary>
            <typeparam name="Source"></typeparam>
            <typeparam name="Target"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.WEFExtention.JsonSerialize(System.Object)">
            <summary>
                将C#数据实体转化为JSON数据
            </summary>
            <param name="obj">要转化的数据实体</param>
            <returns>JSON格式字符串</returns>
        </member>
        <member name="M:WEF.WEFExtention.JsonDeserialize``1(System.String)">
            <summary>
                将JSON数据转化为C#数据实体
            </summary>
            <param name="json">符合JSON格式的字符串</param>
            <returns>T类型的对象</returns>
        </member>
        <member name="T:WEF.Provider.DbProvider">
            <summary>
            DbProvider
            </summary>
        </member>
        <member name="F:WEF.Provider.DbProvider.likeToken">
            <summary>
            like符号。 --- 2015-09-07
            </summary>
        </member>
        <member name="F:WEF.Provider.DbProvider.leftToken">
            <summary>
            【
            </summary>
        </member>
        <member name="F:WEF.Provider.DbProvider.paramPrefixToken">
            <summary>
            参数前缀
            </summary>
        </member>
        <member name="F:WEF.Provider.DbProvider.rightToken">
            <summary>
            】
            </summary>
        </member>
        <member name="F:WEF.Provider.DbProvider.dbProviderFactory">
            <summary>
            The db provider factory.
            </summary>
        </member>
        <member name="F:WEF.Provider.DbProvider.dbConnStrBuilder">
            <summary>
            The db connection string builder
            </summary>
        </member>
        <member name="M:WEF.Provider.DbProvider.#ctor(System.String,System.Data.Common.DbProviderFactory,System.Char,System.Char,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:DbProvider"/> class.
            </summary>
            <param name="connectionString">The conn STR.</param>
            <param name="dbProviderFactory">The db provider factory.</param>
            <param name="leftToken">leftToken</param>
            <param name="paramPrefixToken">paramPrefixToken</param>
            <param name="rightToken">rightToken</param>
        </member>
        <member name="M:WEF.Provider.DbProvider.#ctor(System.String,System.Data.Common.DbProviderFactory,System.Char,System.Char,System.Char,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:DbProvider"/> class.
            </summary>
            <param name="connectionString">The conn STR.</param>
            <param name="dbProviderFactory">The db provider factory.</param>
            <param name="leftToken">leftToken</param>
            <param name="paramPrefixToken">paramPrefixToken</param>
            <param name="rightToken">rightToken</param>
            <param name="likeToken">likeToken</param>
        </member>
        <member name="F:WEF.Provider.DbProvider.databaseType">
            <summary>
            
            </summary>
        </member>
        <member name="P:WEF.Provider.DbProvider.DatabaseType">
            <summary>
            ConnectionStrings 节点名称
            </summary>
        </member>
        <member name="P:WEF.Provider.DbProvider.ConnectionStringsName">
            <summary>
            ConnectionStrings 节点名称
            </summary>
        </member>
        <member name="P:WEF.Provider.DbProvider.ConnectionString">
            <summary>
            Gets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:WEF.Provider.DbProvider.DbProviderFactory">
            <summary>
            Gets the db provider factory.
            </summary>
            <value>The db provider factory.</value>
        </member>
        <member name="P:WEF.Provider.DbProvider.ParamPrefix">
            <summary>
            Gets the param prefix.
            </summary>
            <value>The param prefix.</value>
        </member>
        <member name="P:WEF.Provider.DbProvider.LeftToken">
            <summary>
            Gets the left token of table name or column name.
            </summary>
            <value>The left token.</value>
        </member>
        <member name="P:WEF.Provider.DbProvider.RightToken">
            <summary>
            Gets the right token of table name or column name.
            </summary>
            <value>The right token.</value>
        </member>
        <member name="F:WEF.Provider.DbProvider.cacheConfig">
            <summary>
            缓存
            </summary>
        </member>
        <member name="P:WEF.Provider.DbProvider.CacheConfig">
            <summary>
            缓存配置
            </summary>
        </member>
        <member name="F:WEF.Provider.DbProvider.entitiesCache">
            <summary>
            实体缓存
            </summary>
        </member>
        <member name="P:WEF.Provider.DbProvider.EntitiesCache">
            <summary>
            实体缓存
            </summary>
        </member>
        <member name="P:WEF.Provider.DbProvider.RowAutoID">
            <summary>
            自增长字段查询语句
            </summary>
        </member>
        <member name="P:WEF.Provider.DbProvider.SupportBatch">
            <summary>
            是否支持批量sql提交
            </summary>
        </member>
        <member name="M:WEF.Provider.DbProvider.BuildParameterName(System.String)">
            <summary>
            Builds the name of the parameter.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:WEF.Provider.DbProvider.BuildTableName(System.String,System.String)">
            <summary>
            Builds the name of the table.
            </summary>
            <param name="name">The name.</param>
            <param name="userName">The name.</param>
            <returns></returns>
        </member>
        <member name="M:WEF.Provider.DbProvider.CreatePageFromSection(WEF.Search,System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <param name="fromSection"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Provider.DbProvider.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            调整DbCommand命令
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Provider.MySqlProvider.CreatePageFromSection(WEF.Search,System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <param name="fromSection"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Provider.OracleProvider">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="M:WEF.Provider.OracleProvider.CreatePageFromSection(WEF.Search,System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <param name="fromSection"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Provider.OracleProvider.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="T:WEF.Provider.ProviderFactory">
            <summary>
            The db provider factory.
            </summary>
        </member>
        <member name="M:WEF.Provider.ProviderFactory.CreateDbProvider(System.String,System.String,System.String,System.Nullable{WEF.DatabaseType})">
            <summary>
            创建数据库事件提供程序
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="className">Name of the class.</param>
            <param name="connectionString">The conn STR.</param>
            <param name="databaseType">The DatabaseType.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="P:WEF.Provider.ProviderFactory.Default">
            <summary>
            Gets the default db provider.
            </summary>
            <value>The default.</value>
        </member>
        <member name="M:WEF.Provider.ProviderFactory.CreateDbProvider(System.String)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="connStrName">Name of the conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="T:WEF.Provider.SqliteProvider">
            <summary>
            sqlite
            </summary>
        </member>
        <member name="M:WEF.Provider.SqliteProvider.CreatePageFromSection(WEF.Search,System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <param name="fromSection"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Provider.SqlServer9Provider">
            <summary>
            Sql Server 2005
            </summary>
        </member>
        <member name="M:WEF.Provider.SqlServer9Provider.CreatePageFromSection(WEF.Search,System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <param name="fromSection"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Provider.SqlServerProvider">
            <summary>
            SqlServer 
            </summary>
        </member>
        <member name="M:WEF.Provider.SqlServerProvider.BuildParameterName(System.String)">
            <summary>
            Builds the name of the parameter.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:WEF.Search">
            <summary>
            查询
            </summary>    
        </member>
        <member name="F:WEF.Search.where">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Search.havingWhere">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Search.orderBy">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Search.groupBy">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Search.tableName">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Search.parameters">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Search.fields">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Search.dbProvider">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Search.joins">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Search.database">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Search.distinctString">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Search.prefixString">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Search.startIndex">
            <summary>
            开始项
            </summary>
        </member>
        <member name="F:WEF.Search.endIndex">
            <summary>
            结束项
            </summary>
        </member>
        <member name="F:WEF.Search.timeout">
            <summary>
            缓存超时时间
            </summary>
        </member>
        <member name="F:WEF.Search.cacheDep">
            <summary>
            缓存依赖
            </summary>
        </member>
        <member name="F:WEF.Search.typeTableName">
            <summary>
            
            </summary>
        </member>
        <member name="F:WEF.Search.isRefresh">
            <summary>
            是否重新加载
            </summary>
        </member>
        <member name="F:WEF.Search.isPageFromSection">
            <summary>
            是否已经执行过分页
            </summary>
        </member>
        <member name="F:WEF.Search.trans">
            <summary>
            事务   -- 查询
            </summary>
        </member>
        <member name="P:WEF.Search.Identity">
            <summary>
            
            </summary>
        </member>
        <member name="P:WEF.Search.DbProvider">
            <summary>
            DbProvider。
            </summary>
        </member>
        <member name="P:WEF.Search.Database">
            <summary>
            DbProvider。
            </summary>
        </member>
        <member name="P:WEF.Search.DistinctString">
            <summary>
            设置 distinct
            </summary>
        </member>
        <member name="P:WEF.Search.PrefixString">
            <summary>
            前置值如 Top N
            </summary>
        </member>
        <member name="F:WEF.Search._limitString">
            <summary>
            limit
            </summary>
        </member>
        <member name="P:WEF.Search.LimitString">
            <summary>
            limit 
            </summary>
        </member>
        <member name="P:WEF.Search.CountSqlString">
            <summary>
            记录数sql语句 count
            </summary>
        </member>
        <member name="P:WEF.Search.SqlNoneOrderbyString">
            <summary>
            没有没有排序字段
            </summary>
        </member>
        <member name="P:WEF.Search.FromString">
            <summary>
            
            </summary>
        </member>
        <member name="P:WEF.Search.Joins">
            <summary>
            连接信息
            </summary>
        </member>
        <member name="P:WEF.Search.SqlString">
            <summary>
            获取 sql语句
            </summary>
        </member>
        <member name="P:WEF.Search.TableName">
            <summary>
            返回  表名
            </summary>
        </member>
        <member name="P:WEF.Search.OrderByClip">
            <summary>
            返回  排序
            </summary>
        </member>
        <member name="P:WEF.Search.OrderByString">
            <summary>
            返回排序字符串  例如：orderby id desc
            </summary>
        </member>
        <member name="P:WEF.Search.GroupByClip">
            <summary>
            返回 分组
            </summary>
        </member>
        <member name="P:WEF.Search.GroupByString">
            <summary>
            返回排序字符串 例如：group by id
            </summary>
        </member>
        <member name="M:WEF.Search.GetWhereClip">
            <summary>
            返回 条件
            </summary>
        </member>
        <member name="P:WEF.Search.Parameters">
            <summary>
            返回 参数  (包含where 和 from)
            </summary>
        </member>
        <member name="P:WEF.Search.ColumnsString">
            <summary>
            返回  选择列
            </summary>
        </member>
        <member name="P:WEF.Search.Fields">
            <summary>
            查询的字段
            </summary>
        </member>
        <member name="M:WEF.Search.#ctor(WEF.Db.Database,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:WEF.Search.#ctor(WEF.Db.Database,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
            <param name="tableName"></param>
            <param name="asName"></param>
        </member>
        <member name="M:WEF.Search.#ctor(WEF.Db.Database,System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
            <param name="tableName"></param>
            <param name="asName"></param>
            <param name="trans"></param>
        </member>
        <member name="M:WEF.Search.isTurnonCache">
            <summary>
            是否开启缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.isCustomerCache">
            <summary>
            判断是否用户自定义缓存策略
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.SetCacheTimeOut(System.Int32)">
            <summary>
            设置缓存有效期  单位：秒
            </summary>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.SetCacheDependency(System.Web.Caching.CacheDependency)">
            <summary>
            设置缓存依赖
            </summary>
            <param name="dep"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.Refresh">
            <summary>
            重新加载
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.Where(WEF.Expressions.WhereClip)">
            <summary>
            whereclip
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.GroupBy(WEF.Expressions.GroupByClip)">
            <summary>
            groupby
            </summary>
            <param name="groupBy"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.Having(WEF.Expressions.WhereClip)">
            <summary>
            having条件
            </summary>
            <param name="havingWhere"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.GroupBy(WEF.Common.Field[])">
            <summary>
            groupby
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.OrderBy(WEF.Expressions.OrderByClip)">
            <summary>
            orderby
            </summary>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.OrderBy(WEF.Expressions.OrderByClip[])">
            <summary>
            orderby
            </summary>
            <param name="orderBys"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.Select(WEF.Common.Field[])">
            <summary>
            select field
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.AddSelect(WEF.ISearch)">
            <summary>
            select sql
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.AddSelect(WEF.ISearch,System.String)">
            <summary>
            select sql
            </summary>
            <param name="fromSection"></param>
            <param name="aliasName">别名</param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.AddSelect(WEF.Common.Field[])">
            <summary>
            add select field
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.Distinct">
            <summary>
            Distinct
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.Top(System.Int32)">
            <summary>
            Top
            </summary>
            <param name="topCount"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.Page(System.Int32,System.Int32)">
            <summary>
            Page
            </summary>
            <param name="pageSize">每页数</param>
            <param name="pageIndex">第几页</param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.From(System.Int32,System.Int32)">
            <summary>
            From startIndex to endIndex
            </summary>
            <param name="startIndex">开始记录数</param>
            <param name="endIndex">结束记录数</param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.formatSql(System.String,WEF.ISearch)">
            <summary>
            格式化sql语句
            </summary>
            <param name="sql"></param>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.Count">
            <summary>
            获取记录数
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.Count(WEF.ISearch)">
            <summary>
            获取记录数(内部使用)
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.getCache(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.setCache``1(``0,System.String)">
            <summary>
            保存信息
            </summary>
            <param name="value"></param>
            <param name="cacheKey"></param>
        </member>
        <member name="M:WEF.Search.ToDataSet">
            <summary>
            To DataSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.GetPagedFromSection">
            <summary>
            获取分页过的FromSection
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.CreateDbCommand(WEF.ISearch)">
            <summary>
            创建  查询的DbCommand
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.ToDataReader">
            <summary>
            To DataReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.ToDataReader(WEF.ISearch)">
            <summary>
             To DataReader
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.ToDataTable">
            <summary>
            To DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.ToScalar">
            <summary>
            To Scalar
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.ToScalar``1">
            <summary>
            To Scalar
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.join(System.String,System.String,WEF.Expressions.WhereClip,WEF.Common.JoinType)">
            <summary>
            连接
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <param name="joinType"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.InnerJoin(System.String,WEF.Expressions.WhereClip,System.String)">
            <summary>
            Inner Join
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.LeftJoin(System.String,WEF.Expressions.WhereClip,System.String)">
            <summary>
            Left Join
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.RightJoin(System.String,WEF.Expressions.WhereClip,System.String)">
            <summary>
            Right Join
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.CrossJoin(System.String,WEF.Expressions.WhereClip,System.String)">
            <summary>
            Cross Join
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.FullJoin(System.String,WEF.Expressions.WhereClip,System.String)">
            <summary>
            Full Join
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.Union(WEF.ISearch)">
            <summary>
            Union
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Search.UnionAll(WEF.ISearch)">
            <summary>
            Union All
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="T:WEF.Section.ProcSection">
            <summary>
            执行存储过程
            </summary>
        </member>
        <member name="M:WEF.Section.ProcSection.#ctor(WEF.DBContext,System.String)">
            <summary>
            
            </summary>
            <param name="dbSession"></param>
            <param name="procName"></param>
        </member>
        <member name="F:WEF.Section.ProcSection.outParameters">
            <summary>
            返回的参数
            </summary>
        </member>
        <member name="M:WEF.Section.ProcSection.SetDbTransaction(System.Data.Common.DbTransaction)">
            <summary>
            设置事务
            </summary>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="P:WEF.Section.ProcSection.isParameterSpecial">
            <summary>
            存储过程参数不要加前缀
            </summary>
        </member>
        <member name="M:WEF.Section.ProcSection.getParameterName(System.String)">
            <summary>
            获取参数名字
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.ProcSection.GetReturnValues">
            <summary>
            返回存储过程返回值
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.ProcSection.AddParameter(System.Data.Common.DbParameter[])">
            <summary>
            添加参数
            </summary>
        </member>
        <member name="M:WEF.Section.ProcSection.AddInParameter(System.String,System.Data.DbType,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="parameterName"></param>
            <param name="value"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.ProcSection.AddInParameter(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            添加输入参数
            </summary>
            <param name="parameterName"></param>
            <param name="value"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.ProcSection.AddOutParameter(System.String,System.Data.DbType)">
            <summary>
            添加输出参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.ProcSection.AddOutParameter(System.String,System.Data.DbType,System.Int32)">
            <summary>
            添加输出参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.ProcSection.AddInputOutputParameter(System.String,System.Data.DbType,System.Object)">
            <summary>
            添加输入输出参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.ProcSection.AddInputOutputParameter(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            添加输入输出参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.ProcSection.AddReturnValueParameter(System.String,System.Data.DbType)">
            <summary>
            添加返回参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.ProcSection.AddReturnValueParameter(System.String,System.Data.DbType,System.Int32)">
            <summary>
            添加返回参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.ProcSection.executeBefore">
            <summary>
            操作参数名称
            </summary>
        </member>
        <member name="M:WEF.Section.ProcSection.ToScalar">
            <summary>
            返回单个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.ProcSection.ToDataReader">
            <summary>
            返回DataReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.ProcSection.ToDataSet">
            <summary>
            返回DataSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.ProcSection.ExecuteNonQuery">
            <summary>
            执行ExecuteNonQuery
            </summary>
            <returns></returns>
        </member>
        <member name="T:WEF.Section.Section">
            <summary>
            Section
            </summary>
        </member>
        <member name="M:WEF.Section.Section.ToScalar">
            <summary>
            返回单个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.Section.ToScalar``1">
            <summary>
            返回单个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.Section.First``1">
            <summary>
            返回第一个实体，同ToFirst()。无数据返回Null。
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.Section.ToFirst``1">
            <summary>
            返回单个实体
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.Section.ToFirstDefault``1">
            <summary>
            返回单个实体
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.Section.ToList``1">
            <summary>
            返回实体列表
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.Section.ToEnumerable``1">
            <summary>
            返回懒加载数据
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.Section.ToDataReader">
            <summary>
            返回DataReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.Section.ToDataSet">
            <summary>
            返回DataSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.Section.ToDataTable">
            <summary>
            返回DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:WEF.Section.Section.ExecuteNonQuery">
            <summary>
            执行ExecuteNonQuery
            </summary>
            <returns></returns>
        </member>
        <member name="T:WEF.Section.SqlSection">
            <summary>
            执行sql语句
            </summary>
        </member>
        <member name="M:WEF.Section.SqlSection.#ctor(WEF.DBContext,System.String)">
            <summary>
            
            </summary>
            <param name="dbSession"></param>
            <param name="sql"></param>
        </member>
        <member name="M:WEF.Section.SqlSection.SetDbTransaction(System.Data.Common.DbTransaction)">
            <summary>
            设置事务
            </summary>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:WEF.Section.SqlSection.AddParameter(System.Data.Common.DbParameter[])”忽略有格式错误的 XML 注释 -->
        <member name="M:WEF.Section.SqlSection.AddInParameter(System.String,System.Data.DbType,System.Object)">
            <summary>
            添加参数
            </summary>
        </member>
        <!-- 对于成员“M:WEF.Section.SqlSection.AddInParameter(System.String,System.Data.DbType,System.Int32,System.Object)”忽略有格式错误的 XML 注释 -->
    </members>
</doc>
